{
init <- mappings$init[i]
end <- mappings$end[i]
#increase every position from init to end by 1
strand[init:end] <- strand[init:end] + 1
}
return(strand)
}
# smooths the signal
# b)
smooth_strands <-function(data, k)
{
filter_size <- (2*k) + 1
padding <- rep(0, k)
data <- c(padding, data, padding)
filtered <-filter(data, rep(1/filter_size, filter_size))
return (na.omit(filtered))
}
# get peaks
# c and d)
get_peaks <- function(data, threshold)
{
peaks <- c()
if(missing(threshold))
{
threshold <- 0
}
for(i in 2:(length(data)-1))
{
if(data[i] >= data[i-1] & data[i] > data[i+1] & data[i] > threshold)
{
peaks <-c(peaks, i)
}
}
return(peaks)
}
library(readr)
mappings <- read_delim("mappings.txt", " ", escape_double = FALSE,
col_names = c("init", "end", "direction"), trim_ws = TRUE)
# adapt it to R standards
mappings$init <- mappings$init + 1
mappings$end <- mappings$end + 1
forward_mappings <- mappings[mappings$direction == "+",]
reverse_mappings <- mappings[mappings$direction == "-",]
base_pairs <- 1000
# strands
strands <- data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
# compute mappings
strands$forward <- compute_mappings(forward_mappings, strands$forward)
#strands$reverse <- rev(compute_mappings(reverse_mappings, strands$reverse))
strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)
# do the smoothing
smooth_frame <-data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
k <- 5
smooth_frame$forward <- smooth_strands(strands$forward, k)
smooth_frame$reverse <- smooth_strands(strands$reverse, k)
#plot(strands$forward)
#plot(smooth_frame$forward)
forward_peaks <- get_peaks(smooth_frame$forward,100)
reverse_peaks <- get_peaks(smooth_frame$reverse,100)
forward_peaks
reverse_peaks
# computing peak pairs
forward_pairs <-c()
reverse_pairs <-c()
between <-c(120,200)
for ( i in forward_peaks)
{
# get all candidates
candidates <- reverse_peaks[reverse_peaks > i + between[1] & reverse_peaks < i + between[2]]
# filter for best candidates
if(length(candidates) > 1)
{
best_one <- which.max(smooth_frame$reverse[candidates])
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, best_one)
}
else if (length(candidates) == 1){
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, candidates)
}
}
pairs_df <-data.frame("x"=x, "init"= forward_pairs, "end"=reverse_pairs)
View(pairs_df)
forward_pairs
reverse_pairs
pairs_df <-data.frame("init"= forward_pairs, "end"=reverse_pairs)
candidates
which.max(smooth_frame$reverse[candidates])
# computing peak pairs
forward_pairs <-c()
reverse_pairs <-c()
between <-c(120,200)
for ( i in forward_peaks)
{
# get all candidates
candidates <- reverse_peaks[reverse_peaks > i + between[1] & reverse_peaks < i + between[2]]
# filter for best candidates
if(length(candidates) > 1)
{
best_one <- candidates[which.max(smooth_frame$reverse[candidates])]
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, best_one)
}
else if (length(candidates) == 1){
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, candidates)
}
}
pairs_df <-data.frame("init"= forward_pairs, "end"=reverse_pairs)
# plot results
x <- seq(1, nrow(smooth_frame))
plot_df <-data.frame("x"=x, "forward"=smooth_frame$forward, "reverse"=-1 *smooth_frame$reverse)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4")
# enriched areas
for (i in 1:nrow(pairs_df))
{
p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf), fill="green", alpha=0.005)
}
# show plot
p
# plot results
x <- seq(1, nrow(smooth_frame))
plot_df <-data.frame("x"=x, "forward"=smooth_frame$forward, "reverse"=-1 *smooth_frame$reverse)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4")
p
# enriched areas
for (i in 1:nrow(pairs_df))
{
p
p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf), fill="green", alpha=0.005)
}
# show plot
p
nrow(pairs_df)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4")
# enriched areas
for (i in 1:1)
{
p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf), fill="green", alpha=0.005)
}
# show plot
p
reverse_peaks
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4")
# enriched areas
for (i in 1:1)
{
p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf),  alpha=0.005)
}
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4")
# enriched areas
for (i in 1:nrow(pairs_df))
{
p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf),  alpha=0.005)
}
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(df_pairs, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005))
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(df_pairs, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=df_pairs, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=df_pairs, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes(xmin=init, xmax=end), colour="green",  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(pairs_df, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), colour="green",  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes(xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes(x, xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes(x, xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005)
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005,inherit.aes = TRUE)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005, inherit.aes = FALSE)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf), fill='green',  alpha=0.005, inherit.aes = FALSE)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, fill='green',  alpha=0.005), inherit.aes = FALSE)
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, fill='green',  alpha=0.005))
# show plot
p
# smooth strands
p <- ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, fill='green',  alpha=0.005), inherit.aes = FALSE)
# show plot
p
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, colour='green',  alpha=0.005), inherit.aes = FALSE)
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf,   alpha=0.005), fill='green',inherit.aes = FALSE)
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf),   alpha=0.005, fill='green',inherit.aes = FALSE)
,   alpha=0.005
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, alpha=0.005), fill='green',inherit.aes = FALSE)
reverse_peaks
smooth_strands$reverse[468]
smooth_strands$reverse
smooth_frame$reverse[468]
# library for plotting
library(ggplot2)
# computes the mapping into a strand
# a)
compute_mappings <- function(mappings, strand)
{
for(i in 1:nrow(mappings))
{
init <- mappings$init[i]
end <- mappings$end[i]
#increase every position from init to end by 1
strand[init:end] <- strand[init:end] + 1
}
return(strand)
}
# smooths the signal
# b)
smooth_strands <-function(data, k)
{
filter_size <- (2*k) + 1
padding <- rep(0, k)
data <- c(padding, data, padding)
filtered <-filter(data, rep(1/filter_size, filter_size))
return (na.omit(filtered))
}
# get peaks
# c and d)
get_peaks <- function(data, threshold)
{
peaks <- c()
if(missing(threshold))
{
threshold <- 0
}
for(i in 2:(length(data)-1))
{
if(data[i] >= data[i-1] & data[i] > data[i+1] & data[i] > threshold)
{
peaks <-c(peaks, i)
}
}
return(peaks)
}
library(readr)
mappings <- read_delim("mappings.txt", " ", escape_double = FALSE,
col_names = c("init", "end", "direction"), trim_ws = TRUE)
# adapt it to R standards
mappings$init <- mappings$init + 1
mappings$end <- mappings$end + 1
forward_mappings <- mappings[mappings$direction == "+",]
reverse_mappings <- mappings[mappings$direction == "-",]
base_pairs <- 1000
# strands
strands <- data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
# compute mappings
strands$forward <- compute_mappings(forward_mappings, strands$forward)
#strands$reverse <- rev(compute_mappings(reverse_mappings, strands$reverse))
strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)
# do the smoothing
smooth_frame <-data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
k <- 7
smooth_frame$forward <- smooth_strands(strands$forward, k)
smooth_frame$reverse <- smooth_strands(strands$reverse, k)
#plot(strands$forward)
#plot(smooth_frame$forward)
forward_peaks <- get_peaks(smooth_frame$forward,100)
reverse_peaks <- get_peaks(smooth_frame$reverse,100)
# computing peak pairs
forward_pairs <-c()
reverse_pairs <-c()
between <-c(120,200)
for ( i in forward_peaks)
{
# get all candidates
candidates <- reverse_peaks[reverse_peaks > i + between[1] & reverse_peaks < i + between[2]]
# filter for best candidates
if(length(candidates) > 1)
{
best_one <- candidates[which.max(smooth_frame$reverse[candidates])]
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, best_one)
}
else if (length(candidates) == 1){
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, candidates)
}
}
pairs_df <-data.frame("init"= forward_pairs, "end"=reverse_pairs)
# plot results
x <- seq(1, nrow(smooth_frame))
plot_df <-data.frame("x"=x, "forward"=smooth_frame$forward, "reverse"=-1 *smooth_frame$reverse)
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, alpha=0.005), fill='green',inherit.aes = FALSE)
# enriched areas
# enriched areas
#for (i in 1:nrow(pairs_df))
# enriched areas
#for (i in 1:nrow(pairs_df))
#{
# library for plotting
library(ggplot2)
# computes the mapping into a strand
# a)
compute_mappings <- function(mappings, strand)
{
for(i in 1:nrow(mappings))
{
init <- mappings$init[i]
end <- mappings$end[i]
#increase every position from init to end by 1
strand[init:end] <- strand[init:end] + 1
}
return(strand)
}
# smooths the signal
# b)
smooth_strands <-function(data, k)
{
filter_size <- (2*k) + 1
padding <- rep(0, k)
data <- c(padding, data, padding)
filtered <-filter(data, rep(1/filter_size, filter_size))
return (na.omit(filtered))
}
# get peaks
# c and d)
get_peaks <- function(data, threshold)
{
peaks <- c()
if(missing(threshold))
{
threshold <- 0
}
for(i in 2:(length(data)-1))
{
if(data[i] >= data[i-1] & data[i] > data[i+1] & data[i] > threshold)
{
peaks <-c(peaks, i)
}
}
return(peaks)
}
library(readr)
mappings <- read_delim("mappings.txt", " ", escape_double = FALSE,
col_names = c("init", "end", "direction"), trim_ws = TRUE)
# adapt it to R standards
mappings$init <- mappings$init + 1
mappings$end <- mappings$end + 1
forward_mappings <- mappings[mappings$direction == "+",]
reverse_mappings <- mappings[mappings$direction == "-",]
base_pairs <- 1000
# strands
strands <- data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
# compute mappings
strands$forward <- compute_mappings(forward_mappings, strands$forward)
#strands$reverse <- rev(compute_mappings(reverse_mappings, strands$reverse))
strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)
# do the smoothing
smooth_frame <-data.frame("forward"= rep(0, base_pairs), "reverse"=rep(0, base_pairs))
k <- 5
smooth_frame$forward <- smooth_strands(strands$forward, k)
smooth_frame$reverse <- smooth_strands(strands$reverse, k)
#plot(strands$forward)
#plot(smooth_frame$forward)
forward_peaks <- get_peaks(smooth_frame$forward,100)
reverse_peaks <- get_peaks(smooth_frame$reverse,100)
# computing peak pairs
forward_pairs <-c()
reverse_pairs <-c()
between <-c(120,200)
for ( i in forward_peaks)
{
# get all candidates
candidates <- reverse_peaks[reverse_peaks > i + between[1] & reverse_peaks < i + between[2]]
# filter for best candidates
if(length(candidates) > 1)
{
best_one <- candidates[which.max(smooth_frame$reverse[candidates])]
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, best_one)
}
else if (length(candidates) == 1){
forward_pairs <- c(forward_pairs, i)
reverse_pairs <- c(reverse_pairs, candidates)
}
}
pairs_df <-data.frame("init"= forward_pairs, "end"=reverse_pairs)
# plot results
x <- seq(1, nrow(smooth_frame))
plot_df <-data.frame("x"=x, "forward"=smooth_frame$forward, "reverse"=-1 *smooth_frame$reverse)
# smooth strands
ggplot(plot_df, aes(x)) +
geom_area(aes(y=forward), fill="navyblue") +
geom_area(aes(y=reverse), fill="red4") +
geom_rect(data=pairs_df, aes( xmin=init, xmax=end, ymin=-Inf, ymax=Inf, alpha=0.005), fill='green',inherit.aes = FALSE)
# enriched areas
# enriched areas
#for (i in 1:nrow(pairs_df))
# enriched areas
#for (i in 1:nrow(pairs_df))
#{
# enriched areas
#for (i in 1:nrow(pairs_df))
#{
# p <- p + geom_rect(aes(xmin=pairs_df$init[i], xmax=pairs_df$end[i], ymin=-Inf, ymax=Inf),  alpha=0.005)
