{
    "data" : [
        "\n [241] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [257]  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n [273]  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [289] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [305]  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE",
        "\n [321]  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [337]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n [353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [369] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [385] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE",
        "\n [401] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [417]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [433] FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [449] FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE\n [465] FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE",
        "\n [481] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n [497]  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [513]  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [529]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [545]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE",
        "\n [561] FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [577]  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [593]  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [609]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE\n [625] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE",
        "\n [641]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n [657]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [673] FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE\n [689] FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n [705] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE",
        "\n [721]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [737] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [753] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [769] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE\n [785] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE",
        "\n [801] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [817]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [833] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE\n [849]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [865] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE",
        "\n [881]  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n [897]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE\n [913]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [929]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [945]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE",
        "\n [961]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n [977] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [993] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n [ reached getOption(\"max.print\") -- omitted 3034 entries ]\n",
        "> ",
        "mappings[mappings$direction =='+']",
        "Error: Length of logical index vector must be 1 or 3 (the number of rows), not 4034\n",
        "> ",
        "mappings$direction =='+'",
        "   [1]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE\n  [17] FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE\n  [33] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n  [49] FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n  [65] FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE",
        "\n  [81] FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n  [97]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n [113]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n [129] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n [145] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE",
        "\n [161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE\n [177] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [193] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [209] FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE\n [225] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE",
        "\n [241] FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [257]  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n [273]  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [289] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [305]  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE",
        "\n [321]  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [337]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n [353] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [369] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE\n [385] FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE",
        "\n [401] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [417]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE\n [433] FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [449] FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE\n [465] FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE",
        "\n [481] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n [497]  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [513]  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE\n [529]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [545]  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE",
        "\n [561] FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE\n [577]  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [593]  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE\n [609]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE\n [625] FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE",
        "\n [641]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE\n [657]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n [673] FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE\n [689] FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n [705] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE",
        "\n [721]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE\n [737] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [753] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n [769] FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE\n [785] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE",
        "\n [801] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [817]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\n [833] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE\n [849]  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE\n [865] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE",
        "\n [881]  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE\n [897]  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE\n [913]  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n [929]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE\n [945]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE",
        "\n [961]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE\n [977] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE\n [993] FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE\n [ reached getOption(\"max.print\") -- omitted 3034 entries ]\n",
        "> ",
        "mappings[mappings$direction =='+',]",
        "# A tibble: 1,714 x 3\n    init   end direction\n   <int> <int>     <chr>\n 1   266   302         +\n 2   683   719         +\n 3   577   613         +\n 4   275   311         +\n 5   385   421         +\n 6   270   306         +\n 7   549   585         +\n 8   746   782         +\n 9   541   577         +\n10   317   353         +\n# ... with 1,704 more rows\n",
        "> ",
        "mappings[mappings$direction == \"+\",][mappings$init, mappings$end]",
        "Error: Column indexes must be at most 3 if positive, not 302, 719, 613, 106, 320, 129, 820, 311, 421, 781, 824, 306, 585, 410, 451, 582, 846, 441, 782, 577, 353, 178, 81, 249, 666, 153, 316, 772, 455, 446, 526, 437, 326, 419, 770, 113, 325, 794, 248, 634, 551, 407, 771, 866, 772, 775, 770, 306, 443, 113, 897, 410, 514, 541, 818, 844, 643, 180, 144, 598, 294, 230, 321, 327, 230, 312, 70, 308, 543, 243, 397, 333, 863, 408, 474, 556, 711, 392, 276, 133, 174, 425, 416, 235, 701, 879, 88, 804, 459, 433, 181, 404, 713, 295, 139, 423, 601, 386, 668, 210, 679, 626, 997, 554, 821, 823, 101, 225, 892, 296, 134, 680, 682, 339, 985, 823, 178, 425, 124, 118, 696, 424, 572, 137, 849, 869, 447, 291, 453, 73, 201, 303, 648, 393, 433, 551, 923, 964, 730, 314, 457, 409, 729, 777, 113, 562, 233, 777, 227, 275, 784, 719, 429, 566, 494, 819, 543, 565, 419, 886, 826, 139, 400, 849, 686, 560, 145, 415, 597, 687, 698, 469, 338, 202, 557, 801, 306, 54, 322, 472, 804, 670, 691, 670, 425, 380, 375, 41, 423, 473\n",
        "> ",
        "mappings[mappings$direction == \"+\",]",
        "# A tibble: 1,714 x 3\n    init   end direction\n   <int> <int>     <chr>\n 1   266   302         +\n 2   683   719         +\n 3   577   613         +\n 4   275   311         +\n 5   385   421         +\n 6   270   306         +\n 7   549   585         +\n 8   746   782         +\n 9   541   577         +\n10   317   353         +\n# ... with 1,704 more rows\n",
        "> ",
        "reverse_mappings <- mappings[mappings$direction == \"-\",]",
        "> ",
        "len(forward_mappings)",
        "Error in len(forward_mappings) : could not find function \"len\"\n",
        "> ",
        "length(forward_mappings)",
        "Error: object 'forward_mappings' not found\n",
        "> ",
        "length(forward_mappings[0])",
        "Error: object 'forward_mappings' not found\n",
        "> ",
        "length(forward_mappings[0,])",
        "Error: object 'forward_mappings' not found\n",
        "> ",
        "nrow(forward_mappings)",
        "Error in nrow(forward_mappings) : object 'forward_mappings' not found\n",
        "> ",
        "forward_mappings <- mappings[mappings$direction == \"+\",]",
        "> ",
        "nrow(forward_mappings)",
        "[1] 1714\n",
        "> ",
        "forward_strand <- rep(0, nrow(forward_mappings))",
        "> ",
        "",
        "> ",
        "# reverse strand",
        "> ",
        "reverse_strand <- rep(0, nrow(reverse_mappings))",
        "> ",
        "View(forward_strand)",
        "> ",
        "strands <- data.frame(0, ncol=2, nrow=base_pairs, col_names=c(\"forward\", \"reverse\"))",
        "Error in data.frame(0, ncol = 2, nrow = base_pairs, col_names = c(\"forward\",  : \n  object 'base_pairs' not found\n",
        "> ",
        "base_pairs <- 1000",
        "> ",
        "strands <- data.frame(0, ncol=2, nrow=base_pairs, col_names=c(\"forward\", \"reverse\"))",
        "> ",
        "View(strands)",
        "> ",
        "strands",
        "  X0 ncol nrow col_names\n1  0    2 1000   forward\n2  0    2 1000   reverse\n",
        "> ",
        "strands <- data.frame(col_names=c(\"forward\", \"reverse\"))",
        "> ",
        "View(strands)",
        "> ",
        "strands$forward <- rep(0, 1000)",
        "Error in `$<-.data.frame`(`*tmp*`, forward, value = c(0, 0, 0, 0, 0, 0,  : \n  replacement has 1000 rows, data has 2\n",
        "> ",
        "strands$forward <- rep(0, 1000)",
        "Error in `$<-.data.frame`(`*tmp*`, forward, value = c(0, 0, 0, 0, 0, 0,  : \n  replacement has 1000 rows, data has 2\n",
        "> ",
        "strands <- data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "View(strands)",
        "> ",
        "strands$forward[0:10]",
        " [1] 0 0 0 0 0 0 0 0 0 0\n",
        "> ",
        "forward_mappings$init[8]",
        "[1] 746\n",
        "> ",
        "forward_mappings$init[7]",
        "[1] 549\n",
        "> ",
        "forward_mappings[9]$init",
        "Error: Column index must be at most 3 if positive, not 9\n",
        "> ",
        "for(i in 1:nrow(forward_mappings)) ",
        "+ ",
        "{",
        "+ ",
        "  init <- forward_mappings$init[i]",
        "+ ",
        "  end <- forward_mappings$end[i]",
        "+ ",
        "  strands$forward[init:end] + 1",
        "+ ",
        "}",
        "> ",
        "View(strands)",
        "> ",
        "View(strands)",
        "> ",
        "for(i in 1:nrow(forward_mappings)) ",
        "+ ",
        "{",
        "+ ",
        "  init <- forward_mappings$init[i]",
        "+ ",
        "  end <- forward_mappings$end[i]",
        "+ ",
        "  strands$forward[init:end] <- strands$forward[init:end] + 1",
        "+ ",
        "}",
        "> ",
        "View(strands)",
        "> ",
        "View(strands)",
        "> ",
        "View(mappings)",
        "> ",
        "View(forward_mappings)",
        "> ",
        "code",
        "Error: object 'code' not found\n",
        "> ",
        "code.R",
        "Error: object 'code.R' not found\n",
        "> ",
        "source(\"code.R\", echo = TRUE)",
        "\n> library(readr)\n\n> mappings <- read_delim(\"mappings.txt\", \" \", escape_double = FALSE, \n+                        col_names = c(\"init\", \"end\", \"direction\"), trim_ws = TR .... [TRUNCATED] \n",
        "Parsed with column specification:\ncols(\n  init = col_integer(),\n  end = col_integer(),\n  direction = col_character()\n)\n",
        "\n> View(mappings)\n\n> forward_mappings <- mappings[mappings$direction == \"+\",]\n\n> reverse_mappings <- mappings[mappings$direction == \"-\",] \n\n> base_pairs <- 1000\n\n> # strands\n> strands <- data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))\n\n> # forward mappings\n> for(i in 1:nrow(forward_mappings)) \n+ {\n+   init <- forward_mappings$init[i]\n+   end <- forward_mappings$end[i]\n+   #increase e .... [TRUNCATED] \n",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "compute_mappings <- function(strand, mappings) ",
        "+ ",
        "{",
        "+ ",
        "  for(i in 1:nrow(mappings)) ",
        "+ ",
        "  {",
        "+ ",
        "    init <- mappings$init[i]",
        "+ ",
        "    end <- mappings$end[i]",
        "+ ",
        "    #increase every position from init to end by 1",
        "+ ",
        "    strand[init:end] <- strand[init:end] + 1",
        "+ ",
        "  }",
        "+ ",
        "  return(strand)",
        "+ ",
        "}",
        "> ",
        "compute_mappings(strands$forward, forward_mappings)",
        "   [1]  10  12  14  16  20  20  20  20  20  24  26  26  28  32  32  34  42  42  48  48  54  68  68  78  80\n  [26]  82  90 104 114 128 162 162 168 174 180 190 188 186 186 186 184 188 188 188 192 196 192 190 190 188\n  [51] 184 184 182 176 180 174 174 168 154 154 144 146 144 138 126 120 106  72  76  72  66  60  50  48  48\n  [76]  46  54  54  52  56  64  60  56  56  60  62  66  72  72  78  80  80  80  84  84  90  96 116 112 112\n [101] 110 108 110 110 110 106 104 106 108 108 108 108 112 102 102  96  94  92  94  94",
        " 102 100 102  98  94\n [126] 100  94  98  96  96  94 104  98  98  82  82  84  84  84  78  78  82  94 102 102 102 102 102 104 106\n [151] 106 106 110 114 112 112 114 108 110 106 114 112 108 108 106 108 110 112 102 102  98 102 102 104 104\n [176] 106 106 110 108  96  90  88  92  94  94  96  92  92  94  90  84  84  82  86  86  82  84  76  86  86\n [201]  88  82  80  78  74  76  80  82  76  78  74  78  78  78  78  84  88  96  96  94  94 102  96  94 104\n [226] 102 102 102  98 100  96  98 100 102 104  94  96  96  98 100",
        " 100 102 100  96  92  90  88  92  98  96\n [251] 100 104  98  96 116 132 140 168 176 192 194 188 192 200 210 228 240 252 256 268 268 282 298 300 306\n [276] 326 326 332 338 346 364 382 394 394 400 398 408 412 412 416 416 396 384 376 348 334 320 324 324 330\n [301] 322 316 314 308 298 296 282 278 266 252 246 240 230 228 222 214 208 200 184 172 172 162 154 146 138\n [326] 130 124 126 132 132 128 132 130 128 122 126 116 128 126 118 116 114 116 130 136 132 130 140 144 140\n [351] 142 144 160 158 150 150 154 154 154 156",
        " 164 166 166 168 168 152 150 150 146 150 160 162 158 158 146\n [376] 152 148 146 152 150 138 134 134 148 144 146 146 146 156 142 150 148 150 148 156 158 158 152 156 164\n [401] 166 166 172 174 174 172 166 162 162 166 170 172 164 164 160 152 148 148 152 154 142 136 132 124 122\n [426] 118 122 118 118 116 116 112 118 116 112 106  98  94  90  84  86  88  90  90  90  88  82  78  78  80\n [451]  82  92  94  92  92  86  84  86  92  88  88  96  98  92  88  90  90  88  86  80  82  86  86  86  86\n [476]  88  88  84  82  84",
        "  84  78  78  76  78  76  74  68  58  56  58  58  58  58  54  50  50  52  42  32\n [501]  32  34  32  30  34  34  34  34  34  36  50  52  50  58  66  66  70  74  74  76  80  88  92 100 112\n [526] 112 120 122 132 144 154 168 180 180 188 206 214 224 222 224 228 228 226 228 226 224 228 220 222 222\n [551] 214 204 204 196 192 194 198 196 192 192 190 184 188 188 206 194 190 186 174 160 160 156 138 142 138\n [576] 144 148 152 150 150 158 158 158 158 166 164 164 170 170 176 176 180 180 180 178 182 186 190 184 184\n [601]",
        " 176 156 158 150 144 142 144 144 138 148 136 140 136 130 122 122 128 120 126 126 128 118 118 118 116\n [626] 118 116 134 160 186 200 248 244 252 256 274 284 284 292 292 308 326 342 350 362 396 402 416 408 408\n [651] 434 442 450 446 450 456 456 454 468 472 480 496 500 512 502 478 452 432 398 398 396 392 378 366 386\n [676] 378 390 376 376 366 364 356 348 336 336 340 342 320 322 326 326 326 324 326 326 348 346 340 320 320\n [701] 306 302 304 302 302 288 290 276 266 264 266 246 244 234 240 222 216 212 208 184 198",
        " 184 180 178 188\n [726] 180 168 166 158 150 146 142 102  98 102 104 100 102  98  90 100 104 106  98  98 100  98  94  98  98\n [751]  94  90  92  92  88  98 100  86  86  90  88  74  72  70  70  72  70  70  70  70  72  66  64  62  60\n [776]  62  62  56  54  54  54  56  66  66  66  62  62  62  60  58  58  64  56  54  50  50  46  44  44  44\n [801]  44  44  42  42  42  40  40  38  38  38  38  36  34  34  30  28  26  26  24  12  14  14  14  16  16\n [826]  14  14  16  10   8   6  10  10  12  12  12  12  12  12  12  12",
        "  12  12  14  14  14  14  14  14  14\n [851]  14  14  14  16  16  16  16  14  14  14  12  12  12  14  12  12  12  12   8   8   6   6   6   6   6\n [876]   6   6   6   6   6   4   4   4   4   4   4   4   4   4   4   2   2   2   2   2   2   2   2   2   2\n [901]   0   0   2   2   2   2   4   4   4   4   8  10  10  10  12  12  12  12  12  12  12  12  12  12  14\n [926]  14  14  14  14  14  14  14  14  14  14  14  14  14  14  12  12  12  12  10  10  10  10   6   4   6\n [951]   6   6   8   8   8   8  12  18  28  28  38",
        "  42  44  44  44  44  44  44  44  44  44  44  44  44  44\n [976]  44  44  44  44  44  44  44  44  44  44  44  42  42  40  38  38  38  38  34  28  18  18   8   2   0\n",
        "> ",
        "{",
        "+ ",
        "  for(i in 1:nrow(mappings)) ",
        "+ ",
        "  {",
        "+ ",
        "    init <- mappings$init[i]",
        "+ ",
        "    end <- mappings$end[i]",
        "+ ",
        "    #increase every position from init to end by 1",
        "+ ",
        "    strand[init:end] <- strand[init:end] + 1",
        "+ ",
        "  }",
        "+ ",
        "  return(strand)",
        "+ ",
        "}",
        "Error in strand : object 'strand' not found\n",
        "> ",
        "strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)",
        "Error in 1:nrow(mappings) : argument of length 0\n",
        "> ",
        "View(reverse_mappings)",
        "> ",
        "compute_mappings(reverse_mappings, strands$reverse)",
        "Error in 1:nrow(mappings) : argument of length 0\n",
        "> ",
        "compute_mappings <- function(mappings, strand) ",
        "+ ",
        "{",
        "+ ",
        "  for(i in 1:nrow(mappings)) ",
        "+ ",
        "  {",
        "+ ",
        "    init <- mappings$init[i]",
        "+ ",
        "    end <- mappings$end[i]",
        "+ ",
        "    #increase every position from init to end by 1",
        "+ ",
        "    strand[init:end] <- strand[init:end] + 1",
        "+ ",
        "  }",
        "+ ",
        "  return(strand)",
        "+ ",
        "}",
        "> ",
        "compute_mappings(reverse_mappings, strands$reverse)",
        "   [1]   1   3   4   7   7  10  15  17  19  20  21  24  24  27  29  30  30  34  37  41  41  41  42  42  42\n  [26]  42  44  44  45  45  46  47  47  47  47  47  46  46  44  43  40  40  37  35  33  32  31  34  34  34\n  [51]  32  32  31  31  33  31  27  28  28  28  32  33  33  31  32  32  34  36  36  38  39  49  49  50  52\n  [76]  56  82  86  86  88  85  87  86  86  91  93  95  97  97  97  97  93  98  98  97 102 105 104 103 103\n [101] 105 107 112 110 107 108 109 108 101 103 103 103 101  77  73  74  72  76  74  74",
        "  77  69  65  65  62\n [126]  60  61  64  62  57  61  66  63  60  57  58  62  64  66  64  66  73  71  70  76  81  79  81  81  79\n [151]  77  77  76  76  72  74  74  73  72  73  73  76  76  76  73  75  74  70  65  63  63  63  63  60  56\n [176]  52  50  48  41  42  42  44  36  53  50  48  48  49  56  57  58  59  57  60  59  63  64  63  60  60\n [201]  63  75  75  75  79  80  82  82  82  82  81  81  80  78  79  79  78  76  70  71  54  55  55  56  55\n [226]  50  50  49  48  48  51  51  51  49  51  51  52  51  40  39",
        "  39  35  41  39  38  39  38  39  39  43\n [251]  44  43  45  45  48  47  46  46  46  46  51  52  53  54  59  60  61  55  58  59  59  59  61  63  62\n [276]  62  62  64  65  58  58  59  60  62  62  64  61  67  72  74  79  77  78  85  90  90  90  90  91  88\n [301]  86  83  82  81  84  81  77  76  74  74  73  71  74  75  78  82  88  90  90  88  86  85  84  83  77\n [326]  73  72  76  77  75  68  63  69  67  65  63  63  64  69  71  71  68  68  67  69  68  66  64  64  60\n [351]  60  56  51  46  44  44  45  49  49  50",
        "  50  51  50  53  46  44  44  53  59  60  68  77  84  89  99\n [376]  94  95  99 102 102 102 102 106 111 116 128 148 152 158 162 162 167 176 180 182 188 193 198 197 207\n [401] 207 205 206 215 212 207 207 197 190 187 183 173 174 175 177 175 179 181 182 180 175 172 162 143 138\n [426] 131 127 126 122 114 111 105  99  92  87 107 101  98  98  99  93  86  87  80  83  86  86  88  88  86\n [451]  83  80  86  81  81  82  81  85  90  90  91  93  98  99 100 105 103 101 102 104 104 105  84  84  82\n [476]  83  81  79  79  81",
        "  83  79  77  75  75  76  75  74  71  66  66  64  60  59  55  48  48  47  44  39\n [501]  40  39  38  43  45  44  50  50  50  52  50  50  49  55  56  59  60  61  70  77  84  87  89  94  95\n [526]  98  97 100 104 112 117 123 123 121 123 124 127 125 127 123 119 117 117 109 110 113 115 114 113 113\n [551] 108 109 106 102 102  95  86  80  74  72  67  69  68  73  72  68  62  59  54  57  61  65  68  66  67\n [576]  65  66  67  69  71  73  72  68  69  68  69  70  69  67  67  66  63  61  60  57  58  56  56  53  51\n [601]",
        "  45  43  43  41  39  38  35  32  25  22  21  20  20  23  21  20  18  17  19  19  14  14  13  13  14\n [626]  15  15  15  15  16  16  16  19  25  26  27  30  32  35  37  39  42  43  45  45  47  48  53  59  63\n [651]  60  65  64  64  64  65  68  69  71  72  76  79  81  82  88  92  91  92  92  90  88  87  88  89  91\n [676]  90  93  91  88  90  91  93  93  92  89  87  86  90  86  93  96  95 104 102 103 102 102 100  99  99\n [701]  99  94  92  97 106 107 107 106 107 113 112 108 109 105 106 126 129 128 130 129 132",
        " 131 129 128 131\n [726] 144 144 143 145 135 152 151 150 167 174 182 186 196 203 202 200 198 202 211 233 248 248 253 265 266\n [751] 269 272 252 255 259 268 272 303 314 314 321 324 312 305 306 312 310 312 313 318 302 292 281 274 264\n [776] 256 255 252 244 242 238 219 206 208 214 212 228 240 240 242 238 234 225 221 187 176 177 168 157 165\n [801] 171 168 162 167 149 149 148 152 152 158 164 166 175 178 181 184 189 183 178 178 170 157 148 128 115\n [826] 112 112 109 107 117 121 121 125 128 133 135 132 131 133 133 129",
        " 127 126 122 117 128 125 124 125 121\n [851] 121 120 123 125 127 133 131 141 150 158 161 163 162 160 164 164 151 146 145 140 134 130 127 121 118\n [876] 116 115 114 114 115 116 115 104 101  96  95  91  88  86  80  70  67  60  59  48  39  30  27  23  24\n [901]  25  22  23  21  25  27  27  27  26  26  25  23  24  24  26  28  26  26  26  26  26  26  24  23  23\n [926]  23  23  24  24  24  24  23  22  22  22  22  21  20  17  16  18  14  12  12  12  13  14  14  15  14\n [951]  13  11   9   9   8   8   8   8   8   7   8",
        "   8   8   8   7   7   7   7   7   7   7   7   6   6   6\n [976]   6   6   4   4   4   4   4   3   2   2   1   1   1   1   1   1   1   1   1   1   1   1   0   0   0\n",
        "> ",
        "View(strands)",
        "> ",
        "strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)",
        "> ",
        "filter(strands$forward, rep(1/11,11))",
        "Time Series:\nStart = 1 \nEnd = 1000 \nFrequency = 1 \n   [1]          NA          NA          NA          NA          NA   9.1818182   9.9090909  10.6363636\n   [9]  11.4545455  12.1818182  12.8181818  13.8181818  14.8181818  16.0909091  17.3636364  18.7272727\n  [17]  20.6363636  22.5454545  24.8181818  27.0000000  29.2727273  31.8181818  34.6363636  37.9090909\n  [25]  41.5454545  46.7272727  51.6363636  56.1818182  61.0000000  65.6363636  70.6363636  75.4545455\n  [33]  79.8181818  83.5454545  86.8181818  89.3636364",
        "  90.5454545  91.7272727  92.6363636  93.4545455\n  [41]  94.1818182  94.2727273  94.3636364  94.5454545  94.6363636  94.5454545  94.5454545  94.2727273\n  [49]  93.7272727  93.3636364  92.5454545  91.5454545  90.4545455  88.8181818  87.1818182  85.1818182\n  [57]  83.4545455  81.6363636  79.6363636  77.3636364  74.6363636  71.5454545  66.9090909  62.7272727\n  [65]  59.0000000  55.0000000  51.1818182  46.8181818  42.4545455  38.3636364  34.7272727  31.7272727\n  [73]  29.3636364  28.4545455  27.5454545  27.1818182",
        "  26.9090909  26.7272727  27.0000000  27.5454545\n  [81]  28.1818182  29.0909091  29.9090909  30.7272727  31.9090909  33.0000000  33.7272727  34.6363636\n  [89]  35.9090909  37.1818182  38.5454545  40.0909091  42.3636364  44.1818182  46.0000000  47.4545455\n  [97]  48.7272727  50.0909091  51.4545455  52.6363636  53.6363636  54.2727273  54.7272727  54.3636364\n [105]  54.1818182  54.0000000  53.9090909  54.0909091  53.7272727  53.3636364  52.7272727  52.1818182\n [113]  51.6363636  51.0909091  50.4545455  50.1818182",
        "  49.8181818  49.5454545  48.9090909  48.5454545\n [121]  48.4545455  48.3636364  48.5454545  48.7272727  48.8181818  48.8181818  48.9090909  48.8181818\n [129]  48.6363636  47.9090909  47.3636364  46.6363636  46.1818182  45.5454545  44.7272727  43.9090909\n [137]  43.3636364  42.9090909  43.0909091  43.2727273  44.1818182  45.0909091  45.9090909  46.8181818\n [145]  47.8181818  49.0909091  50.3636364  51.6363636  52.5454545  53.0000000  53.4545455  54.0000000\n [153]  54.2727273  54.6363636  54.7272727  55.0909091",
        "  55.3636364  55.4545455  55.3636364  55.0000000\n [161]  54.8181818  54.7272727  54.6363636  54.3636364  54.0000000  53.6363636  53.0909091  52.6363636\n [169]  52.4545455  52.2727273  52.2727273  52.1818182  52.1818182  52.0000000  51.7272727  51.1818182\n [177]  50.7272727  50.2727273  49.9090909  49.4545455  49.0909091  48.4545455  47.8181818  47.0909091\n [185]  46.2727273  45.7272727  45.4545455  45.1818182  44.9090909  44.5454545  44.0000000  43.4545455\n [193]  42.7272727  42.4545455  42.0909091  42.0000000",
        "  41.9090909  41.7272727  41.5454545  41.0000000\n [201]  40.5454545  40.4545455  40.3636364  40.3636364  40.0000000  39.4545455  39.0000000  38.8181818\n [209]  38.7272727  38.7272727  39.1818182  39.7272727  40.4545455  41.0909091  41.9090909  42.6363636\n [217]  43.9090909  44.7272727  45.4545455  46.6363636  47.7272727  48.5454545  49.1818182  49.2727273\n [225]  49.4545455  49.5454545  49.7272727  49.6363636  49.9090909  50.3636364  49.9090909  49.6363636\n [233]  49.3636364  49.1818182  49.2727273  49.2727273",
        "  49.5454545  49.6363636  49.4545455  49.0000000\n [241]  48.3636364  48.0909091  47.9090909  48.0000000  47.9090909  47.9090909  48.0909091  47.9090909\n [249]  47.7272727  48.6363636  50.4545455  52.7272727  56.3636364  60.1818182  64.4545455  68.9090909\n [257]  72.9090909  76.9090909  81.5454545  86.7272727  91.8181818  96.7272727 101.8181818 105.8181818\n [265] 110.0000000 113.4545455 117.4545455 122.4545455 127.3636364 132.1818182 137.4545455 141.9090909\n [273] 146.0909091 150.0000000 154.0909091 158.4545455",
        " 163.6363636 168.7272727 173.0909091 177.6363636\n [281] 181.8181818 185.5454545 189.4545455 193.0909091 196.6363636 199.8181818 201.2727273 201.3636364\n [289] 200.5454545 198.4545455 195.4545455 191.9090909 188.0909091 184.0909091 180.3636364 176.0909091\n [297] 171.5454545 167.8181818 164.3636364 160.8181818 158.4545455 156.0909091 154.1818182 151.5454545\n [305] 148.2727273 144.4545455 140.7272727 136.8181818 132.9090909 129.0000000 125.1818182 121.1818182\n [313] 117.4545455 113.1818182 108.9090909 105.2727273",
        " 101.4545455  97.5454545  93.7272727  89.6363636\n [321]  85.4545455  81.3636364  77.6363636  74.5454545  72.1818182  70.1818182  68.3636364  66.9090909\n [329]  65.7272727  64.6363636  64.0909091  63.4545455  63.6363636  63.6363636  63.0000000  62.2727273\n [337]  61.6363636  60.9090909  60.9090909  61.2727273  61.7272727  61.9090909  63.0000000  63.7272727\n [345]  64.3636364  65.4545455  66.7272727  68.8181818  70.7272727  71.6363636  72.2727273  73.2727273\n [353]  74.3636364  75.0000000  75.5454545  76.6363636",
        "  77.7272727  78.7272727  79.0909091  79.5454545\n [361]  79.6363636  79.6363636  79.4545455  79.0909091  78.9090909  79.0909091  79.0000000  78.6363636\n [369]  78.2727273  77.2727273  76.5454545  76.3636364  76.1818182  76.2727273  76.4545455  75.9090909\n [377]  74.7272727  73.4545455  73.0000000  72.3636364  72.3636364  72.0909091  72.0000000  72.4545455\n [385]  72.0000000  72.0000000  72.4545455  73.1818182  73.8181818  74.1818182  74.8181818  75.3636364\n [393]  75.6363636  76.0909091  76.4545455  77.5454545",
        "  78.2727273  79.3636364  80.4545455  81.6363636\n [401]  82.3636364  82.7272727  82.9090909  83.3636364  83.8181818  84.0909091  84.3636364  84.2727273\n [409]  83.9090909  83.2727273  82.2727273  81.1818182  80.3636364  79.9090909  79.5454545  78.4545455\n [417]  76.9090909  75.0909091  73.2727273  71.3636364  69.4545455  68.0909091  66.7272727  65.3636364\n [425]  63.7272727  62.0000000  60.6363636  59.8181818  59.0909091  58.5454545  57.8181818  56.9090909\n [433]  55.6363636  54.3636364  52.8181818  51.4545455",
        "  50.1818182  49.1818182  47.9090909  46.7272727\n [441]  45.6363636  44.5454545  43.6363636  42.9090909  42.4545455  42.3636364  42.6363636  42.9090909\n [449]  43.0000000  43.0909091  42.9090909  42.7272727  42.9090909  43.5454545  44.0000000  44.3636364\n [457]  45.0000000  45.2727273  45.1818182  45.0000000  44.9090909  45.0909091  45.2727273  45.2727273\n [465]  44.7272727  44.4545455  44.3636364  43.9090909  43.3636364  43.0909091  43.0909091  43.0000000\n [473]  42.7272727  42.4545455  42.3636364  42.5454545",
        "  42.3636364  42.0000000  41.5454545  41.1818182\n [481]  40.7272727  40.0909091  39.1818182  38.0000000  36.8181818  35.6363636  34.4545455  33.5454545\n [489]  32.6363636  31.6363636  30.3636364  29.1818182  28.1818182  27.0000000  25.8181818  24.7272727\n [497]  23.6363636  22.4545455  21.1818182  20.0909091  19.1818182  18.4545455  17.7272727  16.9090909\n [505]  16.6363636  17.4545455  18.3636364  19.0909091  20.2727273  21.9090909  23.3636364  25.0000000\n [513]  26.8181818  28.6363636  30.5454545  32.5454545",
        "  34.2727273  36.0909091  38.3636364  40.8181818\n [521]  42.9090909  45.3636364  47.7272727  50.3636364  53.5454545  57.0909091  61.0909091  65.2727273\n [529]  69.2727273  73.2727273  77.5454545  82.1818182  86.9090909  91.4545455  95.6363636  99.4545455\n [537] 102.8181818 105.4545455 107.6363636 109.7272727 111.3636364 112.3636364 112.6363636 112.5454545\n [545] 112.5454545 112.0909091 111.0000000 109.9090909 108.5454545 106.9090909 105.4545455 104.2727273\n [553] 102.8181818 101.5454545 100.1818182  98.7272727",
        "  97.3636364  96.6363636  95.9090909  96.3636364\n [561]  96.4545455  96.2727273  95.7272727  94.7272727  93.2727273  91.8181818  90.2727273  88.1818182\n [569]  86.0909091  83.8181818  81.0000000  78.9090909  77.1818182  75.5454545  74.4545455  74.3636364\n [577]  74.2727273  74.3636364  75.2727273  76.3636364  77.5454545  78.4545455  79.4545455  80.2727273\n [585]  81.4545455  82.6363636  83.6363636  84.6363636  85.6363636  86.5454545  87.2727273  88.2727273\n [593]  89.4545455  90.0909091  90.7272727  90.7272727",
        "  89.8181818  88.8181818  87.4545455  85.8181818\n [601]  84.1818182  82.4545455  80.5454545  78.1818182  76.5454545  74.3636364  72.7272727  71.8181818\n [609]  70.5454545  69.2727273  68.2727273  67.6363636  66.5454545  65.7272727  65.1818182  64.2727273\n [617]  63.4545455  62.4545455  61.6363636  61.0000000  60.8181818  60.5454545  60.8181818  62.6363636\n [625]  65.3636364  68.7272727  74.1818182  79.9090909  86.0000000  92.2727273  99.4545455 107.0000000\n [633] 114.6363636 121.8181818 127.8181818 133.3636364",
        " 139.0909091 143.3636364 148.1818182 153.1818182\n [641] 159.5454545 165.3636364 171.3636364 177.0000000 182.2727273 188.7272727 194.8181818 200.4545455\n [649] 205.1818182 209.7272727 214.0000000 216.7272727 219.0909091 221.4545455 224.3636364 227.6363636\n [657] 230.4545455 233.0909091 235.9090909 238.4545455 239.7272727 239.5454545 238.4545455 235.9090909\n [665] 232.7272727 229.2727273 225.2727273 219.9090909 213.8181818 208.0909091 202.4545455 198.4545455\n [673] 195.0000000 192.4545455 191.0000000 189.4545455",
        " 187.6363636 185.6363636 183.7272727 182.3636364\n [681] 180.2727273 178.6363636 175.4545455 173.0000000 170.7272727 168.9090909 167.1818182 165.7272727\n [689] 164.7272727 164.2727273 164.8181818 165.0909091 165.0000000 165.0000000 164.9090909 164.0000000\n [697] 162.9090909 161.9090909 160.9090909 159.8181818 158.0909091 155.4545455 152.2727273 148.9090909\n [705] 146.3636364 143.9090909 141.1818182 138.5454545 135.3636364 132.5454545 128.9090909 125.6363636\n [713] 122.0909091 119.0000000 115.2727273 112.2727273",
        " 108.5454545 105.5454545 102.5454545 100.4545455\n [721]  97.7272727  95.2727273  93.0000000  90.5454545  87.9090909  86.1818182  83.6363636  79.9090909\n [729]  76.1818182  72.7272727  68.9090909  65.2727273  62.2727273  59.1818182  56.0909091  53.8181818\n [737]  51.9090909  50.2727273  50.0909091  50.0909091  50.0000000  49.7272727  49.4545455  49.2727273\n [745]  49.2727273  49.4545455  49.0000000  48.4545455  47.8181818  47.3636364  47.3636364  47.3636364\n [753]  46.8181818  46.4545455  46.0909091  45.6363636",
        "  44.7272727  43.9090909  42.9090909  41.9090909\n [761]  41.1818182  39.9090909  38.5454545  37.8181818  37.0909091  36.2727273  35.2727273  34.8181818\n [769]  34.3636364  33.9090909  33.5454545  33.0909091  32.4545455  31.7272727  31.0000000  30.2727273\n [777]  29.5454545  29.5454545  29.6363636  29.8181818  29.9090909  29.9090909  29.9090909  30.0909091\n [785]  30.2727273  30.4545455  30.9090909  30.9090909  30.3636364  29.6363636  28.9090909  28.1818182\n [793]  27.3636364  26.5454545  25.8181818  25.1818182",
        "  24.5454545  23.5454545  22.9090909  22.3636364\n [801]  21.9090909  21.4545455  21.0909091  20.8181818  20.5454545  20.2727273  19.9090909  19.4545455\n [809]  19.0909091  18.5454545  17.9090909  17.2727273  16.6363636  16.0000000  14.8181818  13.7272727\n [817]  12.6363636  11.6363636  10.8181818  10.0000000   9.2727273   8.6363636   8.1818182   7.4545455\n [825]   6.7272727   6.4545455   6.2727273   6.0909091   6.0000000   5.8181818   5.6363636   5.5454545\n [833]   5.4545455   5.2727273   5.3636364   5.5454545",
        "   5.8181818   5.9090909   6.0909091   6.1818182\n [841]   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818   6.9090909\n [849]   7.0909091   7.1818182   7.2727273   7.3636364   7.3636364   7.3636364   7.3636364   7.2727273\n [857]   7.1818182   7.0909091   7.0909091   6.9090909   6.7272727   6.5454545   6.3636364   6.0909091\n [865]   5.8181818   5.4545455   5.1818182   4.9090909   4.6363636   4.2727273   4.0000000   3.7272727\n [873]   3.4545455   3.1818182   3.0909091   2.9090909",
        "   2.8181818   2.7272727   2.6363636   2.5454545\n [881]   2.4545455   2.3636364   2.2727273   2.1818182   2.0909091   1.9090909   1.8181818   1.7272727\n [889]   1.6363636   1.5454545   1.4545455   1.3636364   1.2727273   1.1818182   1.0909091   0.9090909\n [897]   0.8181818   0.8181818   0.8181818   0.8181818   0.8181818   0.9090909   1.0000000   1.0909091\n [905]   1.1818182   1.4545455   1.9090909   2.3636364   2.7272727   3.1818182   3.6363636   4.0909091\n [913]   4.4545455   4.8181818   5.1818182   5.5454545",
        "   5.7272727   5.8181818   5.9090909   6.0909091\n [921]   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818\n [929]   6.9090909   7.0000000   7.0000000   7.0000000   7.0000000   7.0000000   6.9090909   6.8181818\n [937]   6.7272727   6.6363636   6.4545455   6.2727273   6.0909091   5.9090909   5.5454545   5.0909091\n [945]   4.7272727   4.4545455   4.1818182   4.0000000   3.8181818   3.7272727   3.6363636   3.7272727\n [953]   4.0909091   5.0909091   6.1818182   7.6363636",
        "   9.2727273  11.0000000  12.6363636  14.2727273\n [961]  15.9090909  17.5454545  19.0000000  20.1818182  20.9090909  21.6363636  21.9090909  22.0000000\n [969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n [977]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  21.9090909  21.8181818  21.6363636\n [985]  21.3636364  21.0909091  20.8181818  20.5454545  20.0909091  19.3636364  18.1818182  17.0000000\n [993]  15.4545455  13.6363636  11.8181818          NA",
        "          NA          NA          NA          NA\n",
        "> ",
        "smooth_strands(data, k)",
        "Error in smooth_strands(data, k) : \n  could not find function \"smooth_strands\"\n",
        "> ",
        "{",
        "+ ",
        "  filter_size <- 2*k + 1",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (filtered[k:-k])",
        "+ ",
        "}",
        "Error: object 'k' not found\n",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- 2*k + 1",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (filtered[k:-k])",
        "+ ",
        "}",
        "> ",
        "smooth_strands(strands$forward, 5)",
        "Error in `[.default`(filtered, k:-k) : \n  only 0's may be mixed with negative subscripts\n",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "sum(strands$forward[i-k:i+k])",
        "+ ",
        "",
        "+ ",
        "}",
        "Error in k : object 'k' not found\n",
        "> ",
        "k <- 5",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "sum(strands$forward[i-k:i+k])",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "sum(strands$forward[i-k:i+k])",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "k",
        "[1] 5\n",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "    sum(strands$forward[i-k:i+k])",
        "+ ",
        "    ",
        "+ ",
        "}",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "strands$forward[i-k:i+k]",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "strands$forward[8-k:8+k]",
        "[1] 10 10 10 10\n",
        "> ",
        "",
        "> ",
        "strands$forward[8-k,8+k]",
        "Error in strands$forward[8 - k, 8 + k] : incorrect number of dimensions\n",
        "> ",
        "",
        "> ",
        "strands$forward[8-k:8+k,]",
        "Error in strands$forward[8 - k:8 + k, ] : incorrect number of dimensions\n",
        "> ",
        "",
        "> ",
        "strands$forward",
        "   [1]   5   6   7   8  10  10  10  10  10  12  13  13  14  16  16  17  21  21  24  24  27  34  34  39  40\n  [26]  41  45  52  57  64  81  81  84  87  90  95  94  93  93  93  92  94  94  94  96  98  96  95  95  94\n  [51]  92  92  91  88  90  87  87  84  77  77  72  73  72  69  63  60  53  36  38  36  33  30  25  24  24\n  [76]  23  27  27  26  28  32  30  28  28  30  31  33  36  36  39  40  40  40  42  42  45  48  58  56  56\n [101]  55  54  55  55  55  53  52  53  54  54  54  54  56  51  51  48  47  46  47  47",
        "  51  50  51  49  47\n [126]  50  47  49  48  48  47  52  49  49  41  41  42  42  42  39  39  41  47  51  51  51  51  51  52  53\n [151]  53  53  55  57  56  56  57  54  55  53  57  56  54  54  53  54  55  56  51  51  49  51  51  52  52\n [176]  53  53  55  54  48  45  44  46  47  47  48  46  46  47  45  42  42  41  43  43  41  42  38  43  43\n [201]  44  41  40  39  37  38  40  41  38  39  37  39  39  39  39  42  44  48  48  47  47  51  48  47  52\n [226]  51  51  51  49  50  48  49  50  51  52  47  48  48  49  50",
        "  50  51  50  48  46  45  44  46  49  48\n [251]  50  52  49  48  58  66  70  84  88  96  97  94  96 100 105 114 120 126 128 134 134 141 149 150 153\n [276] 163 163 166 169 173 182 191 197 197 200 199 204 206 206 208 208 198 192 188 174 167 160 162 162 165\n [301] 161 158 157 154 149 148 141 139 133 126 123 120 115 114 111 107 104 100  92  86  86  81  77  73  69\n [326]  65  62  63  66  66  64  66  65  64  61  63  58  64  63  59  58  57  58  65  68  66  65  70  72  70\n [351]  71  72  80  79  75  75  77  77  77  78",
        "  82  83  83  84  84  76  75  75  73  75  80  81  79  79  73\n [376]  76  74  73  76  75  69  67  67  74  72  73  73  73  78  71  75  74  75  74  78  79  79  76  78  82\n [401]  83  83  86  87  87  86  83  81  81  83  85  86  82  82  80  76  74  74  76  77  71  68  66  62  61\n [426]  59  61  59  59  58  58  56  59  58  56  53  49  47  45  42  43  44  45  45  45  44  41  39  39  40\n [451]  41  46  47  46  46  43  42  43  46  44  44  48  49  46  44  45  45  44  43  40  41  43  43  43  43\n [476]  44  44  42  41  42",
        "  42  39  39  38  39  38  37  34  29  28  29  29  29  29  27  25  25  26  21  16\n [501]  16  17  16  15  17  17  17  17  17  18  25  26  25  29  33  33  35  37  37  38  40  44  46  50  56\n [526]  56  60  61  66  72  77  84  90  90  94 103 107 112 111 112 114 114 113 114 113 112 114 110 111 111\n [551] 107 102 102  98  96  97  99  98  96  96  95  92  94  94 103  97  95  93  87  80  80  78  69  71  69\n [576]  72  74  76  75  75  79  79  79  79  83  82  82  85  85  88  88  90  90  90  89  91  93  95  92  92\n [601]",
        "  88  78  79  75  72  71  72  72  69  74  68  70  68  65  61  61  64  60  63  63  64  59  59  59  58\n [626]  59  58  67  80  93 100 124 122 126 128 137 142 142 146 146 154 163 171 175 181 198 201 208 204 204\n [651] 217 221 225 223 225 228 228 227 234 236 240 248 250 256 251 239 226 216 199 199 198 196 189 183 193\n [676] 189 195 188 188 183 182 178 174 168 168 170 171 160 161 163 163 163 162 163 163 174 173 170 160 160\n [701] 153 151 152 151 151 144 145 138 133 132 133 123 122 117 120 111 108 106 104  92  99",
        "  92  90  89  94\n [726]  90  84  83  79  75  73  71  51  49  51  52  50  51  49  45  50  52  53  49  49  50  49  47  49  49\n [751]  47  45  46  46  44  49  50  43  43  45  44  37  36  35  35  36  35  35  35  35  36  33  32  31  30\n [776]  31  31  28  27  27  27  28  33  33  33  31  31  31  30  29  29  32  28  27  25  25  23  22  22  22\n [801]  22  22  21  21  21  20  20  19  19  19  19  18  17  17  15  14  13  13  12   6   7   7   7   8   8\n [826]   7   7   8   5   4   3   5   5   6   6   6   6   6   6   6   6",
        "   6   6   7   7   7   7   7   7   7\n [851]   7   7   7   8   8   8   8   7   7   7   6   6   6   7   6   6   6   6   4   4   3   3   3   3   3\n [876]   3   3   3   3   3   2   2   2   2   2   2   2   2   2   2   1   1   1   1   1   1   1   1   1   1\n [901]   0   0   1   1   1   1   2   2   2   2   4   5   5   5   6   6   6   6   6   6   6   6   6   6   7\n [926]   7   7   7   7   7   7   7   7   7   7   7   7   7   7   6   6   6   6   5   5   5   5   3   2   3\n [951]   3   3   4   4   4   4   6   9  14  14  19",
        "  21  22  22  22  22  22  22  22  22  22  22  22  22  22\n [976]  22  22  22  22  22  22  22  22  22  22  22  21  21  20  19  19  19  19  17  14   9   9   4   1   0\n",
        "> ",
        "strands$forward[k:]",
        "Error: unexpected ']' in \"strands$forward[k:]\"\n",
        "> ",
        "strands$forward[k:k]",
        "[1] 10\n",
        "> ",
        "strands$forward[k]",
        "[1] 10\n",
        "> ",
        "strands$forward[k:k+1]",
        "[1] 10\n",
        "> ",
        "strands$forward[k:k+2]",
        "[1] 10\n",
        "> ",
        "strands$forward[k:k+3]",
        "[1] 10\n",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "  init <- i-k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  strands$forward[init:end]",
        "+ ",
        "",
        "+ ",
        "}",
        "Error in strands$forward[init:end] : \n  only 0's may be mixed with negative subscripts\n",
        "> ",
        "for(i in 5:50)",
        "+ ",
        "{",
        "+ ",
        "  init <- i-k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  strands$forward[init:end]",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "for(i in 5:50)",
        "+ ",
        "{",
        "+ ",
        "  init <- i-k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  print(strands$forward[init:end])",
        "+ ",
        "",
        "+ ",
        "}",
        " [1]  5  6  7  8 10 10 10 10 10 12\n [1]  5  6  7  8 10 10 10 10 10 12 13\n [1]  6  7  8 10 10 10 10 10 12 13 13\n [1]  7  8 10 10 10 10 10 12 13 13 14\n [1]  8 10 10 10 10 10 12 13 13 14 16\n [1] 10 10 10 10 10 12 13 13 14 16 16\n [1] 10 10 10 10 12 13 13 14 16 16 17\n [1] 10 10 10 12 13 13 14 16 16 17 21\n [1] 10 10 12 13 13 14 16 16 17 21 21\n [1] 10 12 13 13 14 16 16 17 21 21 24\n [1] 12 13 13 14 16 16 17 21 21 24 24\n [1] 13 13 14 16 16 17 21 21 24 24 27\n [1] 13 14 16 16 17 21 21 24 24 27 34\n [1] 14 16 16 17 21 21",
        " 24 24 27 34 34\n [1] 16 16 17 21 21 24 24 27 34 34 39\n [1] 16 17 21 21 24 24 27 34 34 39 40\n [1] 17 21 21 24 24 27 34 34 39 40 41\n [1] 21 21 24 24 27 34 34 39 40 41 45\n [1] 21 24 24 27 34 34 39 40 41 45 52\n [1] 24 24 27 34 34 39 40 41 45 52 57\n [1] 24 27 34 34 39 40 41 45 52 57 64\n [1] 27 34 34 39 40 41 45 52 57 64 81\n [1] 34 34 39 40 41 45 52 57 64 81 81\n [1] 34 39 40 41 45 52 57 64 81 81 84\n [1] 39 40 41 45 52 57 64 81 81 84 87\n [1] 40 41 45 52 57 64 81 81 84 87 90\n [1] 41 45 52 57 64 81 81 84 87 90 95\n [1]",
        " 45 52 57 64 81 81 84 87 90 95 94\n [1] 52 57 64 81 81 84 87 90 95 94 93\n [1] 57 64 81 81 84 87 90 95 94 93 93\n [1] 64 81 81 84 87 90 95 94 93 93 93\n [1] 81 81 84 87 90 95 94 93 93 93 92\n [1] 81 84 87 90 95 94 93 93 93 92 94\n [1] 84 87 90 95 94 93 93 93 92 94 94\n [1] 87 90 95 94 93 93 93 92 94 94 94\n [1] 90 95 94 93 93 93 92 94 94 94 96\n [1] 95 94 93 93 93 92 94 94 94 96 98\n [1] 94 93 93 93 92 94 94 94 96 98 96\n [1] 93 93 93 92 94 94 94 96 98 96 95\n [1] 93 93 92 94 94 94 96 98 96 95 95\n [1] 93 92 94 94 94 96",
        " 98 96 95 95 94\n [1] 92 94 94 94 96 98 96 95 95 94 92\n [1] 94 94 94 96 98 96 95 95 94 92 92\n [1] 94 94 96 98 96 95 95 94 92 92 91\n [1] 94 96 98 96 95 95 94 92 92 91 88\n [1] 96 98 96 95 95 94 92 92 91 88 90\n",
        "> ",
        "for(i in 1:50)",
        "+ ",
        "{",
        "+ ",
        "  init <- i-k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  if(init < 0){",
        "+ ",
        "    init <- 0",
        "+ ",
        "  }",
        "+ ",
        "  if(end > base_pairs)",
        "+ ",
        "  {",
        "+ ",
        "    end <- base_pairs",
        "+ ",
        "  }",
        "+ ",
        "  print(strands$forward[init:end])",
        "+ ",
        "",
        "+ ",
        "}",
        "[1]  5  6  7  8 10 10\n[1]  5  6  7  8 10 10 10\n[1]  5  6  7  8 10 10 10 10\n[1]  5  6  7  8 10 10 10 10 10\n [1]  5  6  7  8 10 10 10 10 10 12\n [1]  5  6  7  8 10 10 10 10 10 12 13\n [1]  6  7  8 10 10 10 10 10 12 13 13\n [1]  7  8 10 10 10 10 10 12 13 13 14\n [1]  8 10 10 10 10 10 12 13 13 14 16\n [1] 10 10 10 10 10 12 13 13 14 16 16\n [1] 10 10 10 10 12 13 13 14 16 16 17\n [1] 10 10 10 12 13 13 14 16 16 17 21\n [1] 10 10 12 13 13 14 16 16 17 21 21\n [1] 10 12 13 13 14 16 16 17 21 21 24\n [1] 12 13 13 14 16 16 17 21 21",
        " 24 24\n [1] 13 13 14 16 16 17 21 21 24 24 27\n [1] 13 14 16 16 17 21 21 24 24 27 34\n [1] 14 16 16 17 21 21 24 24 27 34 34\n [1] 16 16 17 21 21 24 24 27 34 34 39\n [1] 16 17 21 21 24 24 27 34 34 39 40\n [1] 17 21 21 24 24 27 34 34 39 40 41\n [1] 21 21 24 24 27 34 34 39 40 41 45\n [1] 21 24 24 27 34 34 39 40 41 45 52\n [1] 24 24 27 34 34 39 40 41 45 52 57\n [1] 24 27 34 34 39 40 41 45 52 57 64\n [1] 27 34 34 39 40 41 45 52 57 64 81\n [1] 34 34 39 40 41 45 52 57 64 81 81\n [1] 34 39 40 41 45 52 57 64 81 81 84\n [1] 39 40 41",
        " 45 52 57 64 81 81 84 87\n [1] 40 41 45 52 57 64 81 81 84 87 90\n [1] 41 45 52 57 64 81 81 84 87 90 95\n [1] 45 52 57 64 81 81 84 87 90 95 94\n [1] 52 57 64 81 81 84 87 90 95 94 93\n [1] 57 64 81 81 84 87 90 95 94 93 93\n [1] 64 81 81 84 87 90 95 94 93 93 93\n [1] 81 81 84 87 90 95 94 93 93 93 92\n [1] 81 84 87 90 95 94 93 93 93 92 94\n [1] 84 87 90 95 94 93 93 93 92 94 94\n [1] 87 90 95 94 93 93 93 92 94 94 94\n [1] 90 95 94 93 93 93 92 94 94 94 96\n [1] 95 94 93 93 93 92 94 94 94 96 98\n [1] 94 93 93 93 92 94 94 94 96",
        " 98 96\n [1] 93 93 93 92 94 94 94 96 98 96 95\n [1] 93 93 92 94 94 94 96 98 96 95 95\n [1] 93 92 94 94 94 96 98 96 95 95 94\n [1] 92 94 94 94 96 98 96 95 95 94 92\n [1] 94 94 94 96 98 96 95 95 94 92 92\n [1] 94 94 96 98 96 95 95 94 92 92 91\n [1] 94 96 98 96 95 95 94 92 92 91 88\n [1] 96 98 96 95 95 94 92 92 91 88 90\n",
        "> ",
        "for(i in 1:nrow(strands))",
        "+ ",
        "{",
        "+ ",
        "  init <- i - k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  ",
        "+ ",
        "  if(init < 0){",
        "+ ",
        "    init <- 0",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if(end > 1000)",
        "+ ",
        "  {",
        "+ ",
        "    end <- 1000",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  #print(strands$forward[init:end])",
        "+ ",
        "  smooth_frame$forward[i] <- sum(strands$forward[init:end]) / 2 * k + 1",
        "+ ",
        "",
        "+ ",
        "}",
        "Error: object 'smooth_frame' not found\n",
        "> ",
        "smooth_frame <-data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "k <- 5",
        "> ",
        "for(i in 1:nrow(strands))",
        "+ ",
        "plot(strands$forward)",
        "> ",
        "plot(strands$forward)",
        "> ",
        "plot(strands$forward)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "View(smooth_frame)",
        "> ",
        "for(i in 1:nrow(strands))",
        "+ ",
        "{",
        "+ ",
        "  init <- i - k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  ",
        "+ ",
        "  if(init < 0){",
        "+ ",
        "    init <- 0",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if(end > 1000)",
        "+ ",
        "  {",
        "+ ",
        "    end <- 1000",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  #print(strands$forward[init:end])",
        "+ ",
        "  smooth_frame$forward[i] <- sum(strands$forward[init:end]) / (2 * k) + 1",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "plot(cars)",
        "> ",
        "strands$forward[-5:5]",
        "Error in strands$forward[-5:5] : \n  only 0's may be mixed with negative subscripts\n",
        "> ",
        "strands$forward[1]",
        "[1] 5\n",
        "> ",
        "strands$forward[0]",
        "numeric(0)\n",
        "> ",
        "k <- 5",
        "> ",
        "for(i in 1:nrow(strands))",
        "+ ",
        "{",
        "+ ",
        "  init <- i - k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  ",
        "+ ",
        "  if(init < 1){",
        "+ ",
        "    init <- 1",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if(end > 1000)",
        "+ ",
        "  {",
        "+ ",
        "    end <- 1000",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  #print(strands$forward[init:end])",
        "+ ",
        "  smooth_frame$forward[i] <- sum(strands$forward[init:end]) / (2 * k) + 1",
        "+ ",
        "}",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- 2*k + 1",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (filtered[k:length(data)])",
        "+ ",
        "}",
        "> ",
        "smooth_strands(strands$forward, 5)",
        "  [1]          NA   9.1818182   9.9090909  10.6363636  11.4545455  12.1818182  12.8181818  13.8181818\n  [9]  14.8181818  16.0909091  17.3636364  18.7272727  20.6363636  22.5454545  24.8181818  27.0000000\n [17]  29.2727273  31.8181818  34.6363636  37.9090909  41.5454545  46.7272727  51.6363636  56.1818182\n [25]  61.0000000  65.6363636  70.6363636  75.4545455  79.8181818  83.5454545  86.8181818  89.3636364\n [33]  90.5454545  91.7272727  92.6363636  93.4545455  94.1818182  94.2727273  94.3636364  94.5454545\n [41]",
        "  94.6363636  94.5454545  94.5454545  94.2727273  93.7272727  93.3636364  92.5454545  91.5454545\n [49]  90.4545455  88.8181818  87.1818182  85.1818182  83.4545455  81.6363636  79.6363636  77.3636364\n [57]  74.6363636  71.5454545  66.9090909  62.7272727  59.0000000  55.0000000  51.1818182  46.8181818\n [65]  42.4545455  38.3636364  34.7272727  31.7272727  29.3636364  28.4545455  27.5454545  27.1818182\n [73]  26.9090909  26.7272727  27.0000000  27.5454545  28.1818182  29.0909091  29.9090909  30.7272727\n [81]  31.9090909",
        "  33.0000000  33.7272727  34.6363636  35.9090909  37.1818182  38.5454545  40.0909091\n [89]  42.3636364  44.1818182  46.0000000  47.4545455  48.7272727  50.0909091  51.4545455  52.6363636\n [97]  53.6363636  54.2727273  54.7272727  54.3636364  54.1818182  54.0000000  53.9090909  54.0909091\n[105]  53.7272727  53.3636364  52.7272727  52.1818182  51.6363636  51.0909091  50.4545455  50.1818182\n[113]  49.8181818  49.5454545  48.9090909  48.5454545  48.4545455  48.3636364  48.5454545  48.7272727\n[121]  48.8181818  48.8181818",
        "  48.9090909  48.8181818  48.6363636  47.9090909  47.3636364  46.6363636\n[129]  46.1818182  45.5454545  44.7272727  43.9090909  43.3636364  42.9090909  43.0909091  43.2727273\n[137]  44.1818182  45.0909091  45.9090909  46.8181818  47.8181818  49.0909091  50.3636364  51.6363636\n[145]  52.5454545  53.0000000  53.4545455  54.0000000  54.2727273  54.6363636  54.7272727  55.0909091\n[153]  55.3636364  55.4545455  55.3636364  55.0000000  54.8181818  54.7272727  54.6363636  54.3636364\n[161]  54.0000000  53.6363636  53.0909091",
        "  52.6363636  52.4545455  52.2727273  52.2727273  52.1818182\n[169]  52.1818182  52.0000000  51.7272727  51.1818182  50.7272727  50.2727273  49.9090909  49.4545455\n[177]  49.0909091  48.4545455  47.8181818  47.0909091  46.2727273  45.7272727  45.4545455  45.1818182\n[185]  44.9090909  44.5454545  44.0000000  43.4545455  42.7272727  42.4545455  42.0909091  42.0000000\n[193]  41.9090909  41.7272727  41.5454545  41.0000000  40.5454545  40.4545455  40.3636364  40.3636364\n[201]  40.0000000  39.4545455  39.0000000  38.8181818",
        "  38.7272727  38.7272727  39.1818182  39.7272727\n[209]  40.4545455  41.0909091  41.9090909  42.6363636  43.9090909  44.7272727  45.4545455  46.6363636\n[217]  47.7272727  48.5454545  49.1818182  49.2727273  49.4545455  49.5454545  49.7272727  49.6363636\n[225]  49.9090909  50.3636364  49.9090909  49.6363636  49.3636364  49.1818182  49.2727273  49.2727273\n[233]  49.5454545  49.6363636  49.4545455  49.0000000  48.3636364  48.0909091  47.9090909  48.0000000\n[241]  47.9090909  47.9090909  48.0909091  47.9090909  47.7272727",
        "  48.6363636  50.4545455  52.7272727\n[249]  56.3636364  60.1818182  64.4545455  68.9090909  72.9090909  76.9090909  81.5454545  86.7272727\n[257]  91.8181818  96.7272727 101.8181818 105.8181818 110.0000000 113.4545455 117.4545455 122.4545455\n[265] 127.3636364 132.1818182 137.4545455 141.9090909 146.0909091 150.0000000 154.0909091 158.4545455\n[273] 163.6363636 168.7272727 173.0909091 177.6363636 181.8181818 185.5454545 189.4545455 193.0909091\n[281] 196.6363636 199.8181818 201.2727273 201.3636364 200.5454545 198.4545455",
        " 195.4545455 191.9090909\n[289] 188.0909091 184.0909091 180.3636364 176.0909091 171.5454545 167.8181818 164.3636364 160.8181818\n[297] 158.4545455 156.0909091 154.1818182 151.5454545 148.2727273 144.4545455 140.7272727 136.8181818\n[305] 132.9090909 129.0000000 125.1818182 121.1818182 117.4545455 113.1818182 108.9090909 105.2727273\n[313] 101.4545455  97.5454545  93.7272727  89.6363636  85.4545455  81.3636364  77.6363636  74.5454545\n[321]  72.1818182  70.1818182  68.3636364  66.9090909  65.7272727  64.6363636  64.0909091",
        "  63.4545455\n[329]  63.6363636  63.6363636  63.0000000  62.2727273  61.6363636  60.9090909  60.9090909  61.2727273\n[337]  61.7272727  61.9090909  63.0000000  63.7272727  64.3636364  65.4545455  66.7272727  68.8181818\n[345]  70.7272727  71.6363636  72.2727273  73.2727273  74.3636364  75.0000000  75.5454545  76.6363636\n[353]  77.7272727  78.7272727  79.0909091  79.5454545  79.6363636  79.6363636  79.4545455  79.0909091\n[361]  78.9090909  79.0909091  79.0000000  78.6363636  78.2727273  77.2727273  76.5454545  76.3636364",
        "\n[369]  76.1818182  76.2727273  76.4545455  75.9090909  74.7272727  73.4545455  73.0000000  72.3636364\n[377]  72.3636364  72.0909091  72.0000000  72.4545455  72.0000000  72.0000000  72.4545455  73.1818182\n[385]  73.8181818  74.1818182  74.8181818  75.3636364  75.6363636  76.0909091  76.4545455  77.5454545\n[393]  78.2727273  79.3636364  80.4545455  81.6363636  82.3636364  82.7272727  82.9090909  83.3636364\n[401]  83.8181818  84.0909091  84.3636364  84.2727273  83.9090909  83.2727273  82.2727273  81.1818182\n[409]",
        "  80.3636364  79.9090909  79.5454545  78.4545455  76.9090909  75.0909091  73.2727273  71.3636364\n[417]  69.4545455  68.0909091  66.7272727  65.3636364  63.7272727  62.0000000  60.6363636  59.8181818\n[425]  59.0909091  58.5454545  57.8181818  56.9090909  55.6363636  54.3636364  52.8181818  51.4545455\n[433]  50.1818182  49.1818182  47.9090909  46.7272727  45.6363636  44.5454545  43.6363636  42.9090909\n[441]  42.4545455  42.3636364  42.6363636  42.9090909  43.0000000  43.0909091  42.9090909  42.7272727\n[449]  42.9090909",
        "  43.5454545  44.0000000  44.3636364  45.0000000  45.2727273  45.1818182  45.0000000\n[457]  44.9090909  45.0909091  45.2727273  45.2727273  44.7272727  44.4545455  44.3636364  43.9090909\n[465]  43.3636364  43.0909091  43.0909091  43.0000000  42.7272727  42.4545455  42.3636364  42.5454545\n[473]  42.3636364  42.0000000  41.5454545  41.1818182  40.7272727  40.0909091  39.1818182  38.0000000\n[481]  36.8181818  35.6363636  34.4545455  33.5454545  32.6363636  31.6363636  30.3636364  29.1818182\n[489]  28.1818182  27.0000000",
        "  25.8181818  24.7272727  23.6363636  22.4545455  21.1818182  20.0909091\n[497]  19.1818182  18.4545455  17.7272727  16.9090909  16.6363636  17.4545455  18.3636364  19.0909091\n[505]  20.2727273  21.9090909  23.3636364  25.0000000  26.8181818  28.6363636  30.5454545  32.5454545\n[513]  34.2727273  36.0909091  38.3636364  40.8181818  42.9090909  45.3636364  47.7272727  50.3636364\n[521]  53.5454545  57.0909091  61.0909091  65.2727273  69.2727273  73.2727273  77.5454545  82.1818182\n[529]  86.9090909  91.4545455  95.6363636",
        "  99.4545455 102.8181818 105.4545455 107.6363636 109.7272727\n[537] 111.3636364 112.3636364 112.6363636 112.5454545 112.5454545 112.0909091 111.0000000 109.9090909\n[545] 108.5454545 106.9090909 105.4545455 104.2727273 102.8181818 101.5454545 100.1818182  98.7272727\n[553]  97.3636364  96.6363636  95.9090909  96.3636364  96.4545455  96.2727273  95.7272727  94.7272727\n[561]  93.2727273  91.8181818  90.2727273  88.1818182  86.0909091  83.8181818  81.0000000  78.9090909\n[569]  77.1818182  75.5454545  74.4545455  74.3636364",
        "  74.2727273  74.3636364  75.2727273  76.3636364\n[577]  77.5454545  78.4545455  79.4545455  80.2727273  81.4545455  82.6363636  83.6363636  84.6363636\n[585]  85.6363636  86.5454545  87.2727273  88.2727273  89.4545455  90.0909091  90.7272727  90.7272727\n[593]  89.8181818  88.8181818  87.4545455  85.8181818  84.1818182  82.4545455  80.5454545  78.1818182\n[601]  76.5454545  74.3636364  72.7272727  71.8181818  70.5454545  69.2727273  68.2727273  67.6363636\n[609]  66.5454545  65.7272727  65.1818182  64.2727273  63.4545455",
        "  62.4545455  61.6363636  61.0000000\n[617]  60.8181818  60.5454545  60.8181818  62.6363636  65.3636364  68.7272727  74.1818182  79.9090909\n[625]  86.0000000  92.2727273  99.4545455 107.0000000 114.6363636 121.8181818 127.8181818 133.3636364\n[633] 139.0909091 143.3636364 148.1818182 153.1818182 159.5454545 165.3636364 171.3636364 177.0000000\n[641] 182.2727273 188.7272727 194.8181818 200.4545455 205.1818182 209.7272727 214.0000000 216.7272727\n[649] 219.0909091 221.4545455 224.3636364 227.6363636 230.4545455 233.0909091",
        " 235.9090909 238.4545455\n[657] 239.7272727 239.5454545 238.4545455 235.9090909 232.7272727 229.2727273 225.2727273 219.9090909\n[665] 213.8181818 208.0909091 202.4545455 198.4545455 195.0000000 192.4545455 191.0000000 189.4545455\n[673] 187.6363636 185.6363636 183.7272727 182.3636364 180.2727273 178.6363636 175.4545455 173.0000000\n[681] 170.7272727 168.9090909 167.1818182 165.7272727 164.7272727 164.2727273 164.8181818 165.0909091\n[689] 165.0000000 165.0000000 164.9090909 164.0000000 162.9090909 161.9090909 160.9090909",
        " 159.8181818\n[697] 158.0909091 155.4545455 152.2727273 148.9090909 146.3636364 143.9090909 141.1818182 138.5454545\n[705] 135.3636364 132.5454545 128.9090909 125.6363636 122.0909091 119.0000000 115.2727273 112.2727273\n[713] 108.5454545 105.5454545 102.5454545 100.4545455  97.7272727  95.2727273  93.0000000  90.5454545\n[721]  87.9090909  86.1818182  83.6363636  79.9090909  76.1818182  72.7272727  68.9090909  65.2727273\n[729]  62.2727273  59.1818182  56.0909091  53.8181818  51.9090909  50.2727273  50.0909091  50.0909091",
        "\n[737]  50.0000000  49.7272727  49.4545455  49.2727273  49.2727273  49.4545455  49.0000000  48.4545455\n[745]  47.8181818  47.3636364  47.3636364  47.3636364  46.8181818  46.4545455  46.0909091  45.6363636\n[753]  44.7272727  43.9090909  42.9090909  41.9090909  41.1818182  39.9090909  38.5454545  37.8181818\n[761]  37.0909091  36.2727273  35.2727273  34.8181818  34.3636364  33.9090909  33.5454545  33.0909091\n[769]  32.4545455  31.7272727  31.0000000  30.2727273  29.5454545  29.5454545  29.6363636  29.8181818\n[777]",
        "  29.9090909  29.9090909  29.9090909  30.0909091  30.2727273  30.4545455  30.9090909  30.9090909\n[785]  30.3636364  29.6363636  28.9090909  28.1818182  27.3636364  26.5454545  25.8181818  25.1818182\n[793]  24.5454545  23.5454545  22.9090909  22.3636364  21.9090909  21.4545455  21.0909091  20.8181818\n[801]  20.5454545  20.2727273  19.9090909  19.4545455  19.0909091  18.5454545  17.9090909  17.2727273\n[809]  16.6363636  16.0000000  14.8181818  13.7272727  12.6363636  11.6363636  10.8181818  10.0000000\n[817]   9.2727273",
        "   8.6363636   8.1818182   7.4545455   6.7272727   6.4545455   6.2727273   6.0909091\n[825]   6.0000000   5.8181818   5.6363636   5.5454545   5.4545455   5.2727273   5.3636364   5.5454545\n[833]   5.8181818   5.9090909   6.0909091   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545\n[841]   6.6363636   6.7272727   6.8181818   6.9090909   7.0909091   7.1818182   7.2727273   7.3636364\n[849]   7.3636364   7.3636364   7.3636364   7.2727273   7.1818182   7.0909091   7.0909091   6.9090909\n[857]   6.7272727   6.5454545",
        "   6.3636364   6.0909091   5.8181818   5.4545455   5.1818182   4.9090909\n[865]   4.6363636   4.2727273   4.0000000   3.7272727   3.4545455   3.1818182   3.0909091   2.9090909\n[873]   2.8181818   2.7272727   2.6363636   2.5454545   2.4545455   2.3636364   2.2727273   2.1818182\n[881]   2.0909091   1.9090909   1.8181818   1.7272727   1.6363636   1.5454545   1.4545455   1.3636364\n[889]   1.2727273   1.1818182   1.0909091   0.9090909   0.8181818   0.8181818   0.8181818   0.8181818\n[897]   0.8181818   0.9090909   1.0000000",
        "   1.0909091   1.1818182   1.4545455   1.9090909   2.3636364\n[905]   2.7272727   3.1818182   3.6363636   4.0909091   4.4545455   4.8181818   5.1818182   5.5454545\n[913]   5.7272727   5.8181818   5.9090909   6.0909091   6.1818182   6.2727273   6.3636364   6.4545455\n[921]   6.5454545   6.6363636   6.7272727   6.8181818   6.9090909   7.0000000   7.0000000   7.0000000\n[929]   7.0000000   7.0000000   6.9090909   6.8181818   6.7272727   6.6363636   6.4545455   6.2727273\n[937]   6.0909091   5.9090909   5.5454545   5.0909091",
        "   4.7272727   4.4545455   4.1818182   4.0000000\n[945]   3.8181818   3.7272727   3.6363636   3.7272727   4.0909091   5.0909091   6.1818182   7.6363636\n[953]   9.2727273  11.0000000  12.6363636  14.2727273  15.9090909  17.5454545  19.0000000  20.1818182\n[961]  20.9090909  21.6363636  21.9090909  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n[969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n[977]  22.0000000  21.9090909  21.8181818  21.6363636  21.3636364",
        "  21.0909091  20.8181818  20.5454545\n[985]  20.0909091  19.3636364  18.1818182  17.0000000  15.4545455  13.6363636  11.8181818          NA\n[993]          NA          NA          NA          NA\n",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- 2*k + 1",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (na.omit(filtered))",
        "+ ",
        "}",
        "> ",
        "smooth_strands(strands$forward, 5)",
        "Time Series:\nStart = 6 \nEnd = 995 \nFrequency = 1 \n  [1]   9.1818182   9.9090909  10.6363636  11.4545455  12.1818182  12.8181818  13.8181818  14.8181818\n  [9]  16.0909091  17.3636364  18.7272727  20.6363636  22.5454545  24.8181818  27.0000000  29.2727273\n [17]  31.8181818  34.6363636  37.9090909  41.5454545  46.7272727  51.6363636  56.1818182  61.0000000\n [25]  65.6363636  70.6363636  75.4545455  79.8181818  83.5454545  86.8181818  89.3636364  90.5454545\n [33]  91.7272727  92.6363636  93.4545455  94.1818182  94.2727273",
        "  94.3636364  94.5454545  94.6363636\n [41]  94.5454545  94.5454545  94.2727273  93.7272727  93.3636364  92.5454545  91.5454545  90.4545455\n [49]  88.8181818  87.1818182  85.1818182  83.4545455  81.6363636  79.6363636  77.3636364  74.6363636\n [57]  71.5454545  66.9090909  62.7272727  59.0000000  55.0000000  51.1818182  46.8181818  42.4545455\n [65]  38.3636364  34.7272727  31.7272727  29.3636364  28.4545455  27.5454545  27.1818182  26.9090909\n [73]  26.7272727  27.0000000  27.5454545  28.1818182  29.0909091  29.9090909",
        "  30.7272727  31.9090909\n [81]  33.0000000  33.7272727  34.6363636  35.9090909  37.1818182  38.5454545  40.0909091  42.3636364\n [89]  44.1818182  46.0000000  47.4545455  48.7272727  50.0909091  51.4545455  52.6363636  53.6363636\n [97]  54.2727273  54.7272727  54.3636364  54.1818182  54.0000000  53.9090909  54.0909091  53.7272727\n[105]  53.3636364  52.7272727  52.1818182  51.6363636  51.0909091  50.4545455  50.1818182  49.8181818\n[113]  49.5454545  48.9090909  48.5454545  48.4545455  48.3636364  48.5454545  48.7272727",
        "  48.8181818\n[121]  48.8181818  48.9090909  48.8181818  48.6363636  47.9090909  47.3636364  46.6363636  46.1818182\n[129]  45.5454545  44.7272727  43.9090909  43.3636364  42.9090909  43.0909091  43.2727273  44.1818182\n[137]  45.0909091  45.9090909  46.8181818  47.8181818  49.0909091  50.3636364  51.6363636  52.5454545\n[145]  53.0000000  53.4545455  54.0000000  54.2727273  54.6363636  54.7272727  55.0909091  55.3636364\n[153]  55.4545455  55.3636364  55.0000000  54.8181818  54.7272727  54.6363636  54.3636364  54.0000000",
        "\n[161]  53.6363636  53.0909091  52.6363636  52.4545455  52.2727273  52.2727273  52.1818182  52.1818182\n[169]  52.0000000  51.7272727  51.1818182  50.7272727  50.2727273  49.9090909  49.4545455  49.0909091\n[177]  48.4545455  47.8181818  47.0909091  46.2727273  45.7272727  45.4545455  45.1818182  44.9090909\n[185]  44.5454545  44.0000000  43.4545455  42.7272727  42.4545455  42.0909091  42.0000000  41.9090909\n[193]  41.7272727  41.5454545  41.0000000  40.5454545  40.4545455  40.3636364  40.3636364  40.0000000\n[201]",
        "  39.4545455  39.0000000  38.8181818  38.7272727  38.7272727  39.1818182  39.7272727  40.4545455\n[209]  41.0909091  41.9090909  42.6363636  43.9090909  44.7272727  45.4545455  46.6363636  47.7272727\n[217]  48.5454545  49.1818182  49.2727273  49.4545455  49.5454545  49.7272727  49.6363636  49.9090909\n[225]  50.3636364  49.9090909  49.6363636  49.3636364  49.1818182  49.2727273  49.2727273  49.5454545\n[233]  49.6363636  49.4545455  49.0000000  48.3636364  48.0909091  47.9090909  48.0000000  47.9090909\n[241]  47.9090909",
        "  48.0909091  47.9090909  47.7272727  48.6363636  50.4545455  52.7272727  56.3636364\n[249]  60.1818182  64.4545455  68.9090909  72.9090909  76.9090909  81.5454545  86.7272727  91.8181818\n[257]  96.7272727 101.8181818 105.8181818 110.0000000 113.4545455 117.4545455 122.4545455 127.3636364\n[265] 132.1818182 137.4545455 141.9090909 146.0909091 150.0000000 154.0909091 158.4545455 163.6363636\n[273] 168.7272727 173.0909091 177.6363636 181.8181818 185.5454545 189.4545455 193.0909091 196.6363636\n[281] 199.8181818 201.2727273",
        " 201.3636364 200.5454545 198.4545455 195.4545455 191.9090909 188.0909091\n[289] 184.0909091 180.3636364 176.0909091 171.5454545 167.8181818 164.3636364 160.8181818 158.4545455\n[297] 156.0909091 154.1818182 151.5454545 148.2727273 144.4545455 140.7272727 136.8181818 132.9090909\n[305] 129.0000000 125.1818182 121.1818182 117.4545455 113.1818182 108.9090909 105.2727273 101.4545455\n[313]  97.5454545  93.7272727  89.6363636  85.4545455  81.3636364  77.6363636  74.5454545  72.1818182\n[321]  70.1818182  68.3636364  66.9090909",
        "  65.7272727  64.6363636  64.0909091  63.4545455  63.6363636\n[329]  63.6363636  63.0000000  62.2727273  61.6363636  60.9090909  60.9090909  61.2727273  61.7272727\n[337]  61.9090909  63.0000000  63.7272727  64.3636364  65.4545455  66.7272727  68.8181818  70.7272727\n[345]  71.6363636  72.2727273  73.2727273  74.3636364  75.0000000  75.5454545  76.6363636  77.7272727\n[353]  78.7272727  79.0909091  79.5454545  79.6363636  79.6363636  79.4545455  79.0909091  78.9090909\n[361]  79.0909091  79.0000000  78.6363636  78.2727273",
        "  77.2727273  76.5454545  76.3636364  76.1818182\n[369]  76.2727273  76.4545455  75.9090909  74.7272727  73.4545455  73.0000000  72.3636364  72.3636364\n[377]  72.0909091  72.0000000  72.4545455  72.0000000  72.0000000  72.4545455  73.1818182  73.8181818\n[385]  74.1818182  74.8181818  75.3636364  75.6363636  76.0909091  76.4545455  77.5454545  78.2727273\n[393]  79.3636364  80.4545455  81.6363636  82.3636364  82.7272727  82.9090909  83.3636364  83.8181818\n[401]  84.0909091  84.3636364  84.2727273  83.9090909  83.2727273",
        "  82.2727273  81.1818182  80.3636364\n[409]  79.9090909  79.5454545  78.4545455  76.9090909  75.0909091  73.2727273  71.3636364  69.4545455\n[417]  68.0909091  66.7272727  65.3636364  63.7272727  62.0000000  60.6363636  59.8181818  59.0909091\n[425]  58.5454545  57.8181818  56.9090909  55.6363636  54.3636364  52.8181818  51.4545455  50.1818182\n[433]  49.1818182  47.9090909  46.7272727  45.6363636  44.5454545  43.6363636  42.9090909  42.4545455\n[441]  42.3636364  42.6363636  42.9090909  43.0000000  43.0909091  42.9090909",
        "  42.7272727  42.9090909\n[449]  43.5454545  44.0000000  44.3636364  45.0000000  45.2727273  45.1818182  45.0000000  44.9090909\n[457]  45.0909091  45.2727273  45.2727273  44.7272727  44.4545455  44.3636364  43.9090909  43.3636364\n[465]  43.0909091  43.0909091  43.0000000  42.7272727  42.4545455  42.3636364  42.5454545  42.3636364\n[473]  42.0000000  41.5454545  41.1818182  40.7272727  40.0909091  39.1818182  38.0000000  36.8181818\n[481]  35.6363636  34.4545455  33.5454545  32.6363636  31.6363636  30.3636364  29.1818182",
        "  28.1818182\n[489]  27.0000000  25.8181818  24.7272727  23.6363636  22.4545455  21.1818182  20.0909091  19.1818182\n[497]  18.4545455  17.7272727  16.9090909  16.6363636  17.4545455  18.3636364  19.0909091  20.2727273\n[505]  21.9090909  23.3636364  25.0000000  26.8181818  28.6363636  30.5454545  32.5454545  34.2727273\n[513]  36.0909091  38.3636364  40.8181818  42.9090909  45.3636364  47.7272727  50.3636364  53.5454545\n[521]  57.0909091  61.0909091  65.2727273  69.2727273  73.2727273  77.5454545  82.1818182  86.9090909",
        "\n[529]  91.4545455  95.6363636  99.4545455 102.8181818 105.4545455 107.6363636 109.7272727 111.3636364\n[537] 112.3636364 112.6363636 112.5454545 112.5454545 112.0909091 111.0000000 109.9090909 108.5454545\n[545] 106.9090909 105.4545455 104.2727273 102.8181818 101.5454545 100.1818182  98.7272727  97.3636364\n[553]  96.6363636  95.9090909  96.3636364  96.4545455  96.2727273  95.7272727  94.7272727  93.2727273\n[561]  91.8181818  90.2727273  88.1818182  86.0909091  83.8181818  81.0000000  78.9090909  77.1818182\n[569]",
        "  75.5454545  74.4545455  74.3636364  74.2727273  74.3636364  75.2727273  76.3636364  77.5454545\n[577]  78.4545455  79.4545455  80.2727273  81.4545455  82.6363636  83.6363636  84.6363636  85.6363636\n[585]  86.5454545  87.2727273  88.2727273  89.4545455  90.0909091  90.7272727  90.7272727  89.8181818\n[593]  88.8181818  87.4545455  85.8181818  84.1818182  82.4545455  80.5454545  78.1818182  76.5454545\n[601]  74.3636364  72.7272727  71.8181818  70.5454545  69.2727273  68.2727273  67.6363636  66.5454545\n[609]  65.7272727",
        "  65.1818182  64.2727273  63.4545455  62.4545455  61.6363636  61.0000000  60.8181818\n[617]  60.5454545  60.8181818  62.6363636  65.3636364  68.7272727  74.1818182  79.9090909  86.0000000\n[625]  92.2727273  99.4545455 107.0000000 114.6363636 121.8181818 127.8181818 133.3636364 139.0909091\n[633] 143.3636364 148.1818182 153.1818182 159.5454545 165.3636364 171.3636364 177.0000000 182.2727273\n[641] 188.7272727 194.8181818 200.4545455 205.1818182 209.7272727 214.0000000 216.7272727 219.0909091\n[649] 221.4545455 224.3636364",
        " 227.6363636 230.4545455 233.0909091 235.9090909 238.4545455 239.7272727\n[657] 239.5454545 238.4545455 235.9090909 232.7272727 229.2727273 225.2727273 219.9090909 213.8181818\n[665] 208.0909091 202.4545455 198.4545455 195.0000000 192.4545455 191.0000000 189.4545455 187.6363636\n[673] 185.6363636 183.7272727 182.3636364 180.2727273 178.6363636 175.4545455 173.0000000 170.7272727\n[681] 168.9090909 167.1818182 165.7272727 164.7272727 164.2727273 164.8181818 165.0909091 165.0000000\n[689] 165.0000000 164.9090909 164.0000000",
        " 162.9090909 161.9090909 160.9090909 159.8181818 158.0909091\n[697] 155.4545455 152.2727273 148.9090909 146.3636364 143.9090909 141.1818182 138.5454545 135.3636364\n[705] 132.5454545 128.9090909 125.6363636 122.0909091 119.0000000 115.2727273 112.2727273 108.5454545\n[713] 105.5454545 102.5454545 100.4545455  97.7272727  95.2727273  93.0000000  90.5454545  87.9090909\n[721]  86.1818182  83.6363636  79.9090909  76.1818182  72.7272727  68.9090909  65.2727273  62.2727273\n[729]  59.1818182  56.0909091  53.8181818  51.9090909",
        "  50.2727273  50.0909091  50.0909091  50.0000000\n[737]  49.7272727  49.4545455  49.2727273  49.2727273  49.4545455  49.0000000  48.4545455  47.8181818\n[745]  47.3636364  47.3636364  47.3636364  46.8181818  46.4545455  46.0909091  45.6363636  44.7272727\n[753]  43.9090909  42.9090909  41.9090909  41.1818182  39.9090909  38.5454545  37.8181818  37.0909091\n[761]  36.2727273  35.2727273  34.8181818  34.3636364  33.9090909  33.5454545  33.0909091  32.4545455\n[769]  31.7272727  31.0000000  30.2727273  29.5454545  29.5454545",
        "  29.6363636  29.8181818  29.9090909\n[777]  29.9090909  29.9090909  30.0909091  30.2727273  30.4545455  30.9090909  30.9090909  30.3636364\n[785]  29.6363636  28.9090909  28.1818182  27.3636364  26.5454545  25.8181818  25.1818182  24.5454545\n[793]  23.5454545  22.9090909  22.3636364  21.9090909  21.4545455  21.0909091  20.8181818  20.5454545\n[801]  20.2727273  19.9090909  19.4545455  19.0909091  18.5454545  17.9090909  17.2727273  16.6363636\n[809]  16.0000000  14.8181818  13.7272727  12.6363636  11.6363636  10.8181818",
        "  10.0000000   9.2727273\n[817]   8.6363636   8.1818182   7.4545455   6.7272727   6.4545455   6.2727273   6.0909091   6.0000000\n[825]   5.8181818   5.6363636   5.5454545   5.4545455   5.2727273   5.3636364   5.5454545   5.8181818\n[833]   5.9090909   6.0909091   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636\n[841]   6.7272727   6.8181818   6.9090909   7.0909091   7.1818182   7.2727273   7.3636364   7.3636364\n[849]   7.3636364   7.3636364   7.2727273   7.1818182   7.0909091   7.0909091   6.9090909",
        "   6.7272727\n[857]   6.5454545   6.3636364   6.0909091   5.8181818   5.4545455   5.1818182   4.9090909   4.6363636\n[865]   4.2727273   4.0000000   3.7272727   3.4545455   3.1818182   3.0909091   2.9090909   2.8181818\n[873]   2.7272727   2.6363636   2.5454545   2.4545455   2.3636364   2.2727273   2.1818182   2.0909091\n[881]   1.9090909   1.8181818   1.7272727   1.6363636   1.5454545   1.4545455   1.3636364   1.2727273\n[889]   1.1818182   1.0909091   0.9090909   0.8181818   0.8181818   0.8181818   0.8181818   0.8181818",
        "\n[897]   0.9090909   1.0000000   1.0909091   1.1818182   1.4545455   1.9090909   2.3636364   2.7272727\n[905]   3.1818182   3.6363636   4.0909091   4.4545455   4.8181818   5.1818182   5.5454545   5.7272727\n[913]   5.8181818   5.9090909   6.0909091   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545\n[921]   6.6363636   6.7272727   6.8181818   6.9090909   7.0000000   7.0000000   7.0000000   7.0000000\n[929]   7.0000000   6.9090909   6.8181818   6.7272727   6.6363636   6.4545455   6.2727273   6.0909091\n[937]",
        "   5.9090909   5.5454545   5.0909091   4.7272727   4.4545455   4.1818182   4.0000000   3.8181818\n[945]   3.7272727   3.6363636   3.7272727   4.0909091   5.0909091   6.1818182   7.6363636   9.2727273\n[953]  11.0000000  12.6363636  14.2727273  15.9090909  17.5454545  19.0000000  20.1818182  20.9090909\n[961]  21.6363636  21.9090909  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n[969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n[977]  21.9090909",
        "  21.8181818  21.6363636  21.3636364  21.0909091  20.8181818  20.5454545  20.0909091\n[985]  19.3636364  18.1818182  17.0000000  15.4545455  13.6363636  11.8181818\n",
        "> ",
        "smooth_frame$reverse <- smooth_strands(strands$forward, 5)",
        "Error in `$<-.data.frame`(`*tmp*`, reverse, value = c(9.18181818181818,  : \n  replacement has 990 rows, data has 1000\n",
        "> ",
        "filter_size <- 11",
        "> ",
        "filter(strands$forward, rep(1/filter_size, filter_size))",
        "Time Series:\nStart = 1 \nEnd = 1000 \nFrequency = 1 \n   [1]          NA          NA          NA          NA          NA   9.1818182   9.9090909  10.6363636\n   [9]  11.4545455  12.1818182  12.8181818  13.8181818  14.8181818  16.0909091  17.3636364  18.7272727\n  [17]  20.6363636  22.5454545  24.8181818  27.0000000  29.2727273  31.8181818  34.6363636  37.9090909\n  [25]  41.5454545  46.7272727  51.6363636  56.1818182  61.0000000  65.6363636  70.6363636  75.4545455\n  [33]  79.8181818  83.5454545  86.8181818  89.3636364",
        "  90.5454545  91.7272727  92.6363636  93.4545455\n  [41]  94.1818182  94.2727273  94.3636364  94.5454545  94.6363636  94.5454545  94.5454545  94.2727273\n  [49]  93.7272727  93.3636364  92.5454545  91.5454545  90.4545455  88.8181818  87.1818182  85.1818182\n  [57]  83.4545455  81.6363636  79.6363636  77.3636364  74.6363636  71.5454545  66.9090909  62.7272727\n  [65]  59.0000000  55.0000000  51.1818182  46.8181818  42.4545455  38.3636364  34.7272727  31.7272727\n  [73]  29.3636364  28.4545455  27.5454545  27.1818182",
        "  26.9090909  26.7272727  27.0000000  27.5454545\n  [81]  28.1818182  29.0909091  29.9090909  30.7272727  31.9090909  33.0000000  33.7272727  34.6363636\n  [89]  35.9090909  37.1818182  38.5454545  40.0909091  42.3636364  44.1818182  46.0000000  47.4545455\n  [97]  48.7272727  50.0909091  51.4545455  52.6363636  53.6363636  54.2727273  54.7272727  54.3636364\n [105]  54.1818182  54.0000000  53.9090909  54.0909091  53.7272727  53.3636364  52.7272727  52.1818182\n [113]  51.6363636  51.0909091  50.4545455  50.1818182",
        "  49.8181818  49.5454545  48.9090909  48.5454545\n [121]  48.4545455  48.3636364  48.5454545  48.7272727  48.8181818  48.8181818  48.9090909  48.8181818\n [129]  48.6363636  47.9090909  47.3636364  46.6363636  46.1818182  45.5454545  44.7272727  43.9090909\n [137]  43.3636364  42.9090909  43.0909091  43.2727273  44.1818182  45.0909091  45.9090909  46.8181818\n [145]  47.8181818  49.0909091  50.3636364  51.6363636  52.5454545  53.0000000  53.4545455  54.0000000\n [153]  54.2727273  54.6363636  54.7272727  55.0909091",
        "  55.3636364  55.4545455  55.3636364  55.0000000\n [161]  54.8181818  54.7272727  54.6363636  54.3636364  54.0000000  53.6363636  53.0909091  52.6363636\n [169]  52.4545455  52.2727273  52.2727273  52.1818182  52.1818182  52.0000000  51.7272727  51.1818182\n [177]  50.7272727  50.2727273  49.9090909  49.4545455  49.0909091  48.4545455  47.8181818  47.0909091\n [185]  46.2727273  45.7272727  45.4545455  45.1818182  44.9090909  44.5454545  44.0000000  43.4545455\n [193]  42.7272727  42.4545455  42.0909091  42.0000000",
        "  41.9090909  41.7272727  41.5454545  41.0000000\n [201]  40.5454545  40.4545455  40.3636364  40.3636364  40.0000000  39.4545455  39.0000000  38.8181818\n [209]  38.7272727  38.7272727  39.1818182  39.7272727  40.4545455  41.0909091  41.9090909  42.6363636\n [217]  43.9090909  44.7272727  45.4545455  46.6363636  47.7272727  48.5454545  49.1818182  49.2727273\n [225]  49.4545455  49.5454545  49.7272727  49.6363636  49.9090909  50.3636364  49.9090909  49.6363636\n [233]  49.3636364  49.1818182  49.2727273  49.2727273",
        "  49.5454545  49.6363636  49.4545455  49.0000000\n [241]  48.3636364  48.0909091  47.9090909  48.0000000  47.9090909  47.9090909  48.0909091  47.9090909\n [249]  47.7272727  48.6363636  50.4545455  52.7272727  56.3636364  60.1818182  64.4545455  68.9090909\n [257]  72.9090909  76.9090909  81.5454545  86.7272727  91.8181818  96.7272727 101.8181818 105.8181818\n [265] 110.0000000 113.4545455 117.4545455 122.4545455 127.3636364 132.1818182 137.4545455 141.9090909\n [273] 146.0909091 150.0000000 154.0909091 158.4545455",
        " 163.6363636 168.7272727 173.0909091 177.6363636\n [281] 181.8181818 185.5454545 189.4545455 193.0909091 196.6363636 199.8181818 201.2727273 201.3636364\n [289] 200.5454545 198.4545455 195.4545455 191.9090909 188.0909091 184.0909091 180.3636364 176.0909091\n [297] 171.5454545 167.8181818 164.3636364 160.8181818 158.4545455 156.0909091 154.1818182 151.5454545\n [305] 148.2727273 144.4545455 140.7272727 136.8181818 132.9090909 129.0000000 125.1818182 121.1818182\n [313] 117.4545455 113.1818182 108.9090909 105.2727273",
        " 101.4545455  97.5454545  93.7272727  89.6363636\n [321]  85.4545455  81.3636364  77.6363636  74.5454545  72.1818182  70.1818182  68.3636364  66.9090909\n [329]  65.7272727  64.6363636  64.0909091  63.4545455  63.6363636  63.6363636  63.0000000  62.2727273\n [337]  61.6363636  60.9090909  60.9090909  61.2727273  61.7272727  61.9090909  63.0000000  63.7272727\n [345]  64.3636364  65.4545455  66.7272727  68.8181818  70.7272727  71.6363636  72.2727273  73.2727273\n [353]  74.3636364  75.0000000  75.5454545  76.6363636",
        "  77.7272727  78.7272727  79.0909091  79.5454545\n [361]  79.6363636  79.6363636  79.4545455  79.0909091  78.9090909  79.0909091  79.0000000  78.6363636\n [369]  78.2727273  77.2727273  76.5454545  76.3636364  76.1818182  76.2727273  76.4545455  75.9090909\n [377]  74.7272727  73.4545455  73.0000000  72.3636364  72.3636364  72.0909091  72.0000000  72.4545455\n [385]  72.0000000  72.0000000  72.4545455  73.1818182  73.8181818  74.1818182  74.8181818  75.3636364\n [393]  75.6363636  76.0909091  76.4545455  77.5454545",
        "  78.2727273  79.3636364  80.4545455  81.6363636\n [401]  82.3636364  82.7272727  82.9090909  83.3636364  83.8181818  84.0909091  84.3636364  84.2727273\n [409]  83.9090909  83.2727273  82.2727273  81.1818182  80.3636364  79.9090909  79.5454545  78.4545455\n [417]  76.9090909  75.0909091  73.2727273  71.3636364  69.4545455  68.0909091  66.7272727  65.3636364\n [425]  63.7272727  62.0000000  60.6363636  59.8181818  59.0909091  58.5454545  57.8181818  56.9090909\n [433]  55.6363636  54.3636364  52.8181818  51.4545455",
        "  50.1818182  49.1818182  47.9090909  46.7272727\n [441]  45.6363636  44.5454545  43.6363636  42.9090909  42.4545455  42.3636364  42.6363636  42.9090909\n [449]  43.0000000  43.0909091  42.9090909  42.7272727  42.9090909  43.5454545  44.0000000  44.3636364\n [457]  45.0000000  45.2727273  45.1818182  45.0000000  44.9090909  45.0909091  45.2727273  45.2727273\n [465]  44.7272727  44.4545455  44.3636364  43.9090909  43.3636364  43.0909091  43.0909091  43.0000000\n [473]  42.7272727  42.4545455  42.3636364  42.5454545",
        "  42.3636364  42.0000000  41.5454545  41.1818182\n [481]  40.7272727  40.0909091  39.1818182  38.0000000  36.8181818  35.6363636  34.4545455  33.5454545\n [489]  32.6363636  31.6363636  30.3636364  29.1818182  28.1818182  27.0000000  25.8181818  24.7272727\n [497]  23.6363636  22.4545455  21.1818182  20.0909091  19.1818182  18.4545455  17.7272727  16.9090909\n [505]  16.6363636  17.4545455  18.3636364  19.0909091  20.2727273  21.9090909  23.3636364  25.0000000\n [513]  26.8181818  28.6363636  30.5454545  32.5454545",
        "  34.2727273  36.0909091  38.3636364  40.8181818\n [521]  42.9090909  45.3636364  47.7272727  50.3636364  53.5454545  57.0909091  61.0909091  65.2727273\n [529]  69.2727273  73.2727273  77.5454545  82.1818182  86.9090909  91.4545455  95.6363636  99.4545455\n [537] 102.8181818 105.4545455 107.6363636 109.7272727 111.3636364 112.3636364 112.6363636 112.5454545\n [545] 112.5454545 112.0909091 111.0000000 109.9090909 108.5454545 106.9090909 105.4545455 104.2727273\n [553] 102.8181818 101.5454545 100.1818182  98.7272727",
        "  97.3636364  96.6363636  95.9090909  96.3636364\n [561]  96.4545455  96.2727273  95.7272727  94.7272727  93.2727273  91.8181818  90.2727273  88.1818182\n [569]  86.0909091  83.8181818  81.0000000  78.9090909  77.1818182  75.5454545  74.4545455  74.3636364\n [577]  74.2727273  74.3636364  75.2727273  76.3636364  77.5454545  78.4545455  79.4545455  80.2727273\n [585]  81.4545455  82.6363636  83.6363636  84.6363636  85.6363636  86.5454545  87.2727273  88.2727273\n [593]  89.4545455  90.0909091  90.7272727  90.7272727",
        "  89.8181818  88.8181818  87.4545455  85.8181818\n [601]  84.1818182  82.4545455  80.5454545  78.1818182  76.5454545  74.3636364  72.7272727  71.8181818\n [609]  70.5454545  69.2727273  68.2727273  67.6363636  66.5454545  65.7272727  65.1818182  64.2727273\n [617]  63.4545455  62.4545455  61.6363636  61.0000000  60.8181818  60.5454545  60.8181818  62.6363636\n [625]  65.3636364  68.7272727  74.1818182  79.9090909  86.0000000  92.2727273  99.4545455 107.0000000\n [633] 114.6363636 121.8181818 127.8181818 133.3636364",
        " 139.0909091 143.3636364 148.1818182 153.1818182\n [641] 159.5454545 165.3636364 171.3636364 177.0000000 182.2727273 188.7272727 194.8181818 200.4545455\n [649] 205.1818182 209.7272727 214.0000000 216.7272727 219.0909091 221.4545455 224.3636364 227.6363636\n [657] 230.4545455 233.0909091 235.9090909 238.4545455 239.7272727 239.5454545 238.4545455 235.9090909\n [665] 232.7272727 229.2727273 225.2727273 219.9090909 213.8181818 208.0909091 202.4545455 198.4545455\n [673] 195.0000000 192.4545455 191.0000000 189.4545455",
        " 187.6363636 185.6363636 183.7272727 182.3636364\n [681] 180.2727273 178.6363636 175.4545455 173.0000000 170.7272727 168.9090909 167.1818182 165.7272727\n [689] 164.7272727 164.2727273 164.8181818 165.0909091 165.0000000 165.0000000 164.9090909 164.0000000\n [697] 162.9090909 161.9090909 160.9090909 159.8181818 158.0909091 155.4545455 152.2727273 148.9090909\n [705] 146.3636364 143.9090909 141.1818182 138.5454545 135.3636364 132.5454545 128.9090909 125.6363636\n [713] 122.0909091 119.0000000 115.2727273 112.2727273",
        " 108.5454545 105.5454545 102.5454545 100.4545455\n [721]  97.7272727  95.2727273  93.0000000  90.5454545  87.9090909  86.1818182  83.6363636  79.9090909\n [729]  76.1818182  72.7272727  68.9090909  65.2727273  62.2727273  59.1818182  56.0909091  53.8181818\n [737]  51.9090909  50.2727273  50.0909091  50.0909091  50.0000000  49.7272727  49.4545455  49.2727273\n [745]  49.2727273  49.4545455  49.0000000  48.4545455  47.8181818  47.3636364  47.3636364  47.3636364\n [753]  46.8181818  46.4545455  46.0909091  45.6363636",
        "  44.7272727  43.9090909  42.9090909  41.9090909\n [761]  41.1818182  39.9090909  38.5454545  37.8181818  37.0909091  36.2727273  35.2727273  34.8181818\n [769]  34.3636364  33.9090909  33.5454545  33.0909091  32.4545455  31.7272727  31.0000000  30.2727273\n [777]  29.5454545  29.5454545  29.6363636  29.8181818  29.9090909  29.9090909  29.9090909  30.0909091\n [785]  30.2727273  30.4545455  30.9090909  30.9090909  30.3636364  29.6363636  28.9090909  28.1818182\n [793]  27.3636364  26.5454545  25.8181818  25.1818182",
        "  24.5454545  23.5454545  22.9090909  22.3636364\n [801]  21.9090909  21.4545455  21.0909091  20.8181818  20.5454545  20.2727273  19.9090909  19.4545455\n [809]  19.0909091  18.5454545  17.9090909  17.2727273  16.6363636  16.0000000  14.8181818  13.7272727\n [817]  12.6363636  11.6363636  10.8181818  10.0000000   9.2727273   8.6363636   8.1818182   7.4545455\n [825]   6.7272727   6.4545455   6.2727273   6.0909091   6.0000000   5.8181818   5.6363636   5.5454545\n [833]   5.4545455   5.2727273   5.3636364   5.5454545",
        "   5.8181818   5.9090909   6.0909091   6.1818182\n [841]   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818   6.9090909\n [849]   7.0909091   7.1818182   7.2727273   7.3636364   7.3636364   7.3636364   7.3636364   7.2727273\n [857]   7.1818182   7.0909091   7.0909091   6.9090909   6.7272727   6.5454545   6.3636364   6.0909091\n [865]   5.8181818   5.4545455   5.1818182   4.9090909   4.6363636   4.2727273   4.0000000   3.7272727\n [873]   3.4545455   3.1818182   3.0909091   2.9090909",
        "   2.8181818   2.7272727   2.6363636   2.5454545\n [881]   2.4545455   2.3636364   2.2727273   2.1818182   2.0909091   1.9090909   1.8181818   1.7272727\n [889]   1.6363636   1.5454545   1.4545455   1.3636364   1.2727273   1.1818182   1.0909091   0.9090909\n [897]   0.8181818   0.8181818   0.8181818   0.8181818   0.8181818   0.9090909   1.0000000   1.0909091\n [905]   1.1818182   1.4545455   1.9090909   2.3636364   2.7272727   3.1818182   3.6363636   4.0909091\n [913]   4.4545455   4.8181818   5.1818182   5.5454545",
        "   5.7272727   5.8181818   5.9090909   6.0909091\n [921]   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818\n [929]   6.9090909   7.0000000   7.0000000   7.0000000   7.0000000   7.0000000   6.9090909   6.8181818\n [937]   6.7272727   6.6363636   6.4545455   6.2727273   6.0909091   5.9090909   5.5454545   5.0909091\n [945]   4.7272727   4.4545455   4.1818182   4.0000000   3.8181818   3.7272727   3.6363636   3.7272727\n [953]   4.0909091   5.0909091   6.1818182   7.6363636",
        "   9.2727273  11.0000000  12.6363636  14.2727273\n [961]  15.9090909  17.5454545  19.0000000  20.1818182  20.9090909  21.6363636  21.9090909  22.0000000\n [969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n [977]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  21.9090909  21.8181818  21.6363636\n [985]  21.3636364  21.0909091  20.8181818  20.5454545  20.0909091  19.3636364  18.1818182  17.0000000\n [993]  15.4545455  13.6363636  11.8181818          NA",
        "          NA          NA          NA          NA\n",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- 2*k + 1",
        "+ ",
        "  padding <- rep(0, k)",
        "+ ",
        "  data <- c(padding, data, padding)",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (na.omit(filtered))",
        "+ ",
        "}",
        "> ",
        "smooth_frame$reverse <- smooth_strands(strands$forward, 5)",
        "> ",
        "smooth_strands(strands$forward, 5)",
        "Time Series:\nStart = 6 \nEnd = 1005 \nFrequency = 1 \n   [1]   4.1818182   5.0909091   6.0000000   6.9090909   8.0000000   9.1818182   9.9090909  10.6363636\n   [9]  11.4545455  12.1818182  12.8181818  13.8181818  14.8181818  16.0909091  17.3636364  18.7272727\n  [17]  20.6363636  22.5454545  24.8181818  27.0000000  29.2727273  31.8181818  34.6363636  37.9090909\n  [25]  41.5454545  46.7272727  51.6363636  56.1818182  61.0000000  65.6363636  70.6363636  75.4545455\n  [33]  79.8181818  83.5454545  86.8181818  89.3636364",
        "  90.5454545  91.7272727  92.6363636  93.4545455\n  [41]  94.1818182  94.2727273  94.3636364  94.5454545  94.6363636  94.5454545  94.5454545  94.2727273\n  [49]  93.7272727  93.3636364  92.5454545  91.5454545  90.4545455  88.8181818  87.1818182  85.1818182\n  [57]  83.4545455  81.6363636  79.6363636  77.3636364  74.6363636  71.5454545  66.9090909  62.7272727\n  [65]  59.0000000  55.0000000  51.1818182  46.8181818  42.4545455  38.3636364  34.7272727  31.7272727\n  [73]  29.3636364  28.4545455  27.5454545  27.1818182",
        "  26.9090909  26.7272727  27.0000000  27.5454545\n  [81]  28.1818182  29.0909091  29.9090909  30.7272727  31.9090909  33.0000000  33.7272727  34.6363636\n  [89]  35.9090909  37.1818182  38.5454545  40.0909091  42.3636364  44.1818182  46.0000000  47.4545455\n  [97]  48.7272727  50.0909091  51.4545455  52.6363636  53.6363636  54.2727273  54.7272727  54.3636364\n [105]  54.1818182  54.0000000  53.9090909  54.0909091  53.7272727  53.3636364  52.7272727  52.1818182\n [113]  51.6363636  51.0909091  50.4545455  50.1818182",
        "  49.8181818  49.5454545  48.9090909  48.5454545\n [121]  48.4545455  48.3636364  48.5454545  48.7272727  48.8181818  48.8181818  48.9090909  48.8181818\n [129]  48.6363636  47.9090909  47.3636364  46.6363636  46.1818182  45.5454545  44.7272727  43.9090909\n [137]  43.3636364  42.9090909  43.0909091  43.2727273  44.1818182  45.0909091  45.9090909  46.8181818\n [145]  47.8181818  49.0909091  50.3636364  51.6363636  52.5454545  53.0000000  53.4545455  54.0000000\n [153]  54.2727273  54.6363636  54.7272727  55.0909091",
        "  55.3636364  55.4545455  55.3636364  55.0000000\n [161]  54.8181818  54.7272727  54.6363636  54.3636364  54.0000000  53.6363636  53.0909091  52.6363636\n [169]  52.4545455  52.2727273  52.2727273  52.1818182  52.1818182  52.0000000  51.7272727  51.1818182\n [177]  50.7272727  50.2727273  49.9090909  49.4545455  49.0909091  48.4545455  47.8181818  47.0909091\n [185]  46.2727273  45.7272727  45.4545455  45.1818182  44.9090909  44.5454545  44.0000000  43.4545455\n [193]  42.7272727  42.4545455  42.0909091  42.0000000",
        "  41.9090909  41.7272727  41.5454545  41.0000000\n [201]  40.5454545  40.4545455  40.3636364  40.3636364  40.0000000  39.4545455  39.0000000  38.8181818\n [209]  38.7272727  38.7272727  39.1818182  39.7272727  40.4545455  41.0909091  41.9090909  42.6363636\n [217]  43.9090909  44.7272727  45.4545455  46.6363636  47.7272727  48.5454545  49.1818182  49.2727273\n [225]  49.4545455  49.5454545  49.7272727  49.6363636  49.9090909  50.3636364  49.9090909  49.6363636\n [233]  49.3636364  49.1818182  49.2727273  49.2727273",
        "  49.5454545  49.6363636  49.4545455  49.0000000\n [241]  48.3636364  48.0909091  47.9090909  48.0000000  47.9090909  47.9090909  48.0909091  47.9090909\n [249]  47.7272727  48.6363636  50.4545455  52.7272727  56.3636364  60.1818182  64.4545455  68.9090909\n [257]  72.9090909  76.9090909  81.5454545  86.7272727  91.8181818  96.7272727 101.8181818 105.8181818\n [265] 110.0000000 113.4545455 117.4545455 122.4545455 127.3636364 132.1818182 137.4545455 141.9090909\n [273] 146.0909091 150.0000000 154.0909091 158.4545455",
        " 163.6363636 168.7272727 173.0909091 177.6363636\n [281] 181.8181818 185.5454545 189.4545455 193.0909091 196.6363636 199.8181818 201.2727273 201.3636364\n [289] 200.5454545 198.4545455 195.4545455 191.9090909 188.0909091 184.0909091 180.3636364 176.0909091\n [297] 171.5454545 167.8181818 164.3636364 160.8181818 158.4545455 156.0909091 154.1818182 151.5454545\n [305] 148.2727273 144.4545455 140.7272727 136.8181818 132.9090909 129.0000000 125.1818182 121.1818182\n [313] 117.4545455 113.1818182 108.9090909 105.2727273",
        " 101.4545455  97.5454545  93.7272727  89.6363636\n [321]  85.4545455  81.3636364  77.6363636  74.5454545  72.1818182  70.1818182  68.3636364  66.9090909\n [329]  65.7272727  64.6363636  64.0909091  63.4545455  63.6363636  63.6363636  63.0000000  62.2727273\n [337]  61.6363636  60.9090909  60.9090909  61.2727273  61.7272727  61.9090909  63.0000000  63.7272727\n [345]  64.3636364  65.4545455  66.7272727  68.8181818  70.7272727  71.6363636  72.2727273  73.2727273\n [353]  74.3636364  75.0000000  75.5454545  76.6363636",
        "  77.7272727  78.7272727  79.0909091  79.5454545\n [361]  79.6363636  79.6363636  79.4545455  79.0909091  78.9090909  79.0909091  79.0000000  78.6363636\n [369]  78.2727273  77.2727273  76.5454545  76.3636364  76.1818182  76.2727273  76.4545455  75.9090909\n [377]  74.7272727  73.4545455  73.0000000  72.3636364  72.3636364  72.0909091  72.0000000  72.4545455\n [385]  72.0000000  72.0000000  72.4545455  73.1818182  73.8181818  74.1818182  74.8181818  75.3636364\n [393]  75.6363636  76.0909091  76.4545455  77.5454545",
        "  78.2727273  79.3636364  80.4545455  81.6363636\n [401]  82.3636364  82.7272727  82.9090909  83.3636364  83.8181818  84.0909091  84.3636364  84.2727273\n [409]  83.9090909  83.2727273  82.2727273  81.1818182  80.3636364  79.9090909  79.5454545  78.4545455\n [417]  76.9090909  75.0909091  73.2727273  71.3636364  69.4545455  68.0909091  66.7272727  65.3636364\n [425]  63.7272727  62.0000000  60.6363636  59.8181818  59.0909091  58.5454545  57.8181818  56.9090909\n [433]  55.6363636  54.3636364  52.8181818  51.4545455",
        "  50.1818182  49.1818182  47.9090909  46.7272727\n [441]  45.6363636  44.5454545  43.6363636  42.9090909  42.4545455  42.3636364  42.6363636  42.9090909\n [449]  43.0000000  43.0909091  42.9090909  42.7272727  42.9090909  43.5454545  44.0000000  44.3636364\n [457]  45.0000000  45.2727273  45.1818182  45.0000000  44.9090909  45.0909091  45.2727273  45.2727273\n [465]  44.7272727  44.4545455  44.3636364  43.9090909  43.3636364  43.0909091  43.0909091  43.0000000\n [473]  42.7272727  42.4545455  42.3636364  42.5454545",
        "  42.3636364  42.0000000  41.5454545  41.1818182\n [481]  40.7272727  40.0909091  39.1818182  38.0000000  36.8181818  35.6363636  34.4545455  33.5454545\n [489]  32.6363636  31.6363636  30.3636364  29.1818182  28.1818182  27.0000000  25.8181818  24.7272727\n [497]  23.6363636  22.4545455  21.1818182  20.0909091  19.1818182  18.4545455  17.7272727  16.9090909\n [505]  16.6363636  17.4545455  18.3636364  19.0909091  20.2727273  21.9090909  23.3636364  25.0000000\n [513]  26.8181818  28.6363636  30.5454545  32.5454545",
        "  34.2727273  36.0909091  38.3636364  40.8181818\n [521]  42.9090909  45.3636364  47.7272727  50.3636364  53.5454545  57.0909091  61.0909091  65.2727273\n [529]  69.2727273  73.2727273  77.5454545  82.1818182  86.9090909  91.4545455  95.6363636  99.4545455\n [537] 102.8181818 105.4545455 107.6363636 109.7272727 111.3636364 112.3636364 112.6363636 112.5454545\n [545] 112.5454545 112.0909091 111.0000000 109.9090909 108.5454545 106.9090909 105.4545455 104.2727273\n [553] 102.8181818 101.5454545 100.1818182  98.7272727",
        "  97.3636364  96.6363636  95.9090909  96.3636364\n [561]  96.4545455  96.2727273  95.7272727  94.7272727  93.2727273  91.8181818  90.2727273  88.1818182\n [569]  86.0909091  83.8181818  81.0000000  78.9090909  77.1818182  75.5454545  74.4545455  74.3636364\n [577]  74.2727273  74.3636364  75.2727273  76.3636364  77.5454545  78.4545455  79.4545455  80.2727273\n [585]  81.4545455  82.6363636  83.6363636  84.6363636  85.6363636  86.5454545  87.2727273  88.2727273\n [593]  89.4545455  90.0909091  90.7272727  90.7272727",
        "  89.8181818  88.8181818  87.4545455  85.8181818\n [601]  84.1818182  82.4545455  80.5454545  78.1818182  76.5454545  74.3636364  72.7272727  71.8181818\n [609]  70.5454545  69.2727273  68.2727273  67.6363636  66.5454545  65.7272727  65.1818182  64.2727273\n [617]  63.4545455  62.4545455  61.6363636  61.0000000  60.8181818  60.5454545  60.8181818  62.6363636\n [625]  65.3636364  68.7272727  74.1818182  79.9090909  86.0000000  92.2727273  99.4545455 107.0000000\n [633] 114.6363636 121.8181818 127.8181818 133.3636364",
        " 139.0909091 143.3636364 148.1818182 153.1818182\n [641] 159.5454545 165.3636364 171.3636364 177.0000000 182.2727273 188.7272727 194.8181818 200.4545455\n [649] 205.1818182 209.7272727 214.0000000 216.7272727 219.0909091 221.4545455 224.3636364 227.6363636\n [657] 230.4545455 233.0909091 235.9090909 238.4545455 239.7272727 239.5454545 238.4545455 235.9090909\n [665] 232.7272727 229.2727273 225.2727273 219.9090909 213.8181818 208.0909091 202.4545455 198.4545455\n [673] 195.0000000 192.4545455 191.0000000 189.4545455",
        " 187.6363636 185.6363636 183.7272727 182.3636364\n [681] 180.2727273 178.6363636 175.4545455 173.0000000 170.7272727 168.9090909 167.1818182 165.7272727\n [689] 164.7272727 164.2727273 164.8181818 165.0909091 165.0000000 165.0000000 164.9090909 164.0000000\n [697] 162.9090909 161.9090909 160.9090909 159.8181818 158.0909091 155.4545455 152.2727273 148.9090909\n [705] 146.3636364 143.9090909 141.1818182 138.5454545 135.3636364 132.5454545 128.9090909 125.6363636\n [713] 122.0909091 119.0000000 115.2727273 112.2727273",
        " 108.5454545 105.5454545 102.5454545 100.4545455\n [721]  97.7272727  95.2727273  93.0000000  90.5454545  87.9090909  86.1818182  83.6363636  79.9090909\n [729]  76.1818182  72.7272727  68.9090909  65.2727273  62.2727273  59.1818182  56.0909091  53.8181818\n [737]  51.9090909  50.2727273  50.0909091  50.0909091  50.0000000  49.7272727  49.4545455  49.2727273\n [745]  49.2727273  49.4545455  49.0000000  48.4545455  47.8181818  47.3636364  47.3636364  47.3636364\n [753]  46.8181818  46.4545455  46.0909091  45.6363636",
        "  44.7272727  43.9090909  42.9090909  41.9090909\n [761]  41.1818182  39.9090909  38.5454545  37.8181818  37.0909091  36.2727273  35.2727273  34.8181818\n [769]  34.3636364  33.9090909  33.5454545  33.0909091  32.4545455  31.7272727  31.0000000  30.2727273\n [777]  29.5454545  29.5454545  29.6363636  29.8181818  29.9090909  29.9090909  29.9090909  30.0909091\n [785]  30.2727273  30.4545455  30.9090909  30.9090909  30.3636364  29.6363636  28.9090909  28.1818182\n [793]  27.3636364  26.5454545  25.8181818  25.1818182",
        "  24.5454545  23.5454545  22.9090909  22.3636364\n [801]  21.9090909  21.4545455  21.0909091  20.8181818  20.5454545  20.2727273  19.9090909  19.4545455\n [809]  19.0909091  18.5454545  17.9090909  17.2727273  16.6363636  16.0000000  14.8181818  13.7272727\n [817]  12.6363636  11.6363636  10.8181818  10.0000000   9.2727273   8.6363636   8.1818182   7.4545455\n [825]   6.7272727   6.4545455   6.2727273   6.0909091   6.0000000   5.8181818   5.6363636   5.5454545\n [833]   5.4545455   5.2727273   5.3636364   5.5454545",
        "   5.8181818   5.9090909   6.0909091   6.1818182\n [841]   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818   6.9090909\n [849]   7.0909091   7.1818182   7.2727273   7.3636364   7.3636364   7.3636364   7.3636364   7.2727273\n [857]   7.1818182   7.0909091   7.0909091   6.9090909   6.7272727   6.5454545   6.3636364   6.0909091\n [865]   5.8181818   5.4545455   5.1818182   4.9090909   4.6363636   4.2727273   4.0000000   3.7272727\n [873]   3.4545455   3.1818182   3.0909091   2.9090909",
        "   2.8181818   2.7272727   2.6363636   2.5454545\n [881]   2.4545455   2.3636364   2.2727273   2.1818182   2.0909091   1.9090909   1.8181818   1.7272727\n [889]   1.6363636   1.5454545   1.4545455   1.3636364   1.2727273   1.1818182   1.0909091   0.9090909\n [897]   0.8181818   0.8181818   0.8181818   0.8181818   0.8181818   0.9090909   1.0000000   1.0909091\n [905]   1.1818182   1.4545455   1.9090909   2.3636364   2.7272727   3.1818182   3.6363636   4.0909091\n [913]   4.4545455   4.8181818   5.1818182   5.5454545",
        "   5.7272727   5.8181818   5.9090909   6.0909091\n [921]   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818\n [929]   6.9090909   7.0000000   7.0000000   7.0000000   7.0000000   7.0000000   6.9090909   6.8181818\n [937]   6.7272727   6.6363636   6.4545455   6.2727273   6.0909091   5.9090909   5.5454545   5.0909091\n [945]   4.7272727   4.4545455   4.1818182   4.0000000   3.8181818   3.7272727   3.6363636   3.7272727\n [953]   4.0909091   5.0909091   6.1818182   7.6363636",
        "   9.2727273  11.0000000  12.6363636  14.2727273\n [961]  15.9090909  17.5454545  19.0000000  20.1818182  20.9090909  21.6363636  21.9090909  22.0000000\n [969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n [977]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  21.9090909  21.8181818  21.6363636\n [985]  21.3636364  21.0909091  20.8181818  20.5454545  20.0909091  19.3636364  18.1818182  17.0000000\n [993]  15.4545455  13.6363636  11.8181818  10.0909091",
        "   8.3636364   6.6363636   4.9090909   3.3636364\n",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- (2*k) + 1",
        "+ ",
        "  padding <- rep(0, k)",
        "+ ",
        "  data <- c(padding, data, padding)",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (na.omit(filtered))",
        "+ ",
        "}",
        "> ",
        "smooth_strands(strands$forward, 5)",
        "Time Series:\nStart = 6 \nEnd = 1005 \nFrequency = 1 \n   [1]   4.1818182   5.0909091   6.0000000   6.9090909   8.0000000   9.1818182   9.9090909  10.6363636\n   [9]  11.4545455  12.1818182  12.8181818  13.8181818  14.8181818  16.0909091  17.3636364  18.7272727\n  [17]  20.6363636  22.5454545  24.8181818  27.0000000  29.2727273  31.8181818  34.6363636  37.9090909\n  [25]  41.5454545  46.7272727  51.6363636  56.1818182  61.0000000  65.6363636  70.6363636  75.4545455\n  [33]  79.8181818  83.5454545  86.8181818  89.3636364",
        "  90.5454545  91.7272727  92.6363636  93.4545455\n  [41]  94.1818182  94.2727273  94.3636364  94.5454545  94.6363636  94.5454545  94.5454545  94.2727273\n  [49]  93.7272727  93.3636364  92.5454545  91.5454545  90.4545455  88.8181818  87.1818182  85.1818182\n  [57]  83.4545455  81.6363636  79.6363636  77.3636364  74.6363636  71.5454545  66.9090909  62.7272727\n  [65]  59.0000000  55.0000000  51.1818182  46.8181818  42.4545455  38.3636364  34.7272727  31.7272727\n  [73]  29.3636364  28.4545455  27.5454545  27.1818182",
        "  26.9090909  26.7272727  27.0000000  27.5454545\n  [81]  28.1818182  29.0909091  29.9090909  30.7272727  31.9090909  33.0000000  33.7272727  34.6363636\n  [89]  35.9090909  37.1818182  38.5454545  40.0909091  42.3636364  44.1818182  46.0000000  47.4545455\n  [97]  48.7272727  50.0909091  51.4545455  52.6363636  53.6363636  54.2727273  54.7272727  54.3636364\n [105]  54.1818182  54.0000000  53.9090909  54.0909091  53.7272727  53.3636364  52.7272727  52.1818182\n [113]  51.6363636  51.0909091  50.4545455  50.1818182",
        "  49.8181818  49.5454545  48.9090909  48.5454545\n [121]  48.4545455  48.3636364  48.5454545  48.7272727  48.8181818  48.8181818  48.9090909  48.8181818\n [129]  48.6363636  47.9090909  47.3636364  46.6363636  46.1818182  45.5454545  44.7272727  43.9090909\n [137]  43.3636364  42.9090909  43.0909091  43.2727273  44.1818182  45.0909091  45.9090909  46.8181818\n [145]  47.8181818  49.0909091  50.3636364  51.6363636  52.5454545  53.0000000  53.4545455  54.0000000\n [153]  54.2727273  54.6363636  54.7272727  55.0909091",
        "  55.3636364  55.4545455  55.3636364  55.0000000\n [161]  54.8181818  54.7272727  54.6363636  54.3636364  54.0000000  53.6363636  53.0909091  52.6363636\n [169]  52.4545455  52.2727273  52.2727273  52.1818182  52.1818182  52.0000000  51.7272727  51.1818182\n [177]  50.7272727  50.2727273  49.9090909  49.4545455  49.0909091  48.4545455  47.8181818  47.0909091\n [185]  46.2727273  45.7272727  45.4545455  45.1818182  44.9090909  44.5454545  44.0000000  43.4545455\n [193]  42.7272727  42.4545455  42.0909091  42.0000000",
        "  41.9090909  41.7272727  41.5454545  41.0000000\n [201]  40.5454545  40.4545455  40.3636364  40.3636364  40.0000000  39.4545455  39.0000000  38.8181818\n [209]  38.7272727  38.7272727  39.1818182  39.7272727  40.4545455  41.0909091  41.9090909  42.6363636\n [217]  43.9090909  44.7272727  45.4545455  46.6363636  47.7272727  48.5454545  49.1818182  49.2727273\n [225]  49.4545455  49.5454545  49.7272727  49.6363636  49.9090909  50.3636364  49.9090909  49.6363636\n [233]  49.3636364  49.1818182  49.2727273  49.2727273",
        "  49.5454545  49.6363636  49.4545455  49.0000000\n [241]  48.3636364  48.0909091  47.9090909  48.0000000  47.9090909  47.9090909  48.0909091  47.9090909\n [249]  47.7272727  48.6363636  50.4545455  52.7272727  56.3636364  60.1818182  64.4545455  68.9090909\n [257]  72.9090909  76.9090909  81.5454545  86.7272727  91.8181818  96.7272727 101.8181818 105.8181818\n [265] 110.0000000 113.4545455 117.4545455 122.4545455 127.3636364 132.1818182 137.4545455 141.9090909\n [273] 146.0909091 150.0000000 154.0909091 158.4545455",
        " 163.6363636 168.7272727 173.0909091 177.6363636\n [281] 181.8181818 185.5454545 189.4545455 193.0909091 196.6363636 199.8181818 201.2727273 201.3636364\n [289] 200.5454545 198.4545455 195.4545455 191.9090909 188.0909091 184.0909091 180.3636364 176.0909091\n [297] 171.5454545 167.8181818 164.3636364 160.8181818 158.4545455 156.0909091 154.1818182 151.5454545\n [305] 148.2727273 144.4545455 140.7272727 136.8181818 132.9090909 129.0000000 125.1818182 121.1818182\n [313] 117.4545455 113.1818182 108.9090909 105.2727273",
        " 101.4545455  97.5454545  93.7272727  89.6363636\n [321]  85.4545455  81.3636364  77.6363636  74.5454545  72.1818182  70.1818182  68.3636364  66.9090909\n [329]  65.7272727  64.6363636  64.0909091  63.4545455  63.6363636  63.6363636  63.0000000  62.2727273\n [337]  61.6363636  60.9090909  60.9090909  61.2727273  61.7272727  61.9090909  63.0000000  63.7272727\n [345]  64.3636364  65.4545455  66.7272727  68.8181818  70.7272727  71.6363636  72.2727273  73.2727273\n [353]  74.3636364  75.0000000  75.5454545  76.6363636",
        "  77.7272727  78.7272727  79.0909091  79.5454545\n [361]  79.6363636  79.6363636  79.4545455  79.0909091  78.9090909  79.0909091  79.0000000  78.6363636\n [369]  78.2727273  77.2727273  76.5454545  76.3636364  76.1818182  76.2727273  76.4545455  75.9090909\n [377]  74.7272727  73.4545455  73.0000000  72.3636364  72.3636364  72.0909091  72.0000000  72.4545455\n [385]  72.0000000  72.0000000  72.4545455  73.1818182  73.8181818  74.1818182  74.8181818  75.3636364\n [393]  75.6363636  76.0909091  76.4545455  77.5454545",
        "  78.2727273  79.3636364  80.4545455  81.6363636\n [401]  82.3636364  82.7272727  82.9090909  83.3636364  83.8181818  84.0909091  84.3636364  84.2727273\n [409]  83.9090909  83.2727273  82.2727273  81.1818182  80.3636364  79.9090909  79.5454545  78.4545455\n [417]  76.9090909  75.0909091  73.2727273  71.3636364  69.4545455  68.0909091  66.7272727  65.3636364\n [425]  63.7272727  62.0000000  60.6363636  59.8181818  59.0909091  58.5454545  57.8181818  56.9090909\n [433]  55.6363636  54.3636364  52.8181818  51.4545455",
        "  50.1818182  49.1818182  47.9090909  46.7272727\n [441]  45.6363636  44.5454545  43.6363636  42.9090909  42.4545455  42.3636364  42.6363636  42.9090909\n [449]  43.0000000  43.0909091  42.9090909  42.7272727  42.9090909  43.5454545  44.0000000  44.3636364\n [457]  45.0000000  45.2727273  45.1818182  45.0000000  44.9090909  45.0909091  45.2727273  45.2727273\n [465]  44.7272727  44.4545455  44.3636364  43.9090909  43.3636364  43.0909091  43.0909091  43.0000000\n [473]  42.7272727  42.4545455  42.3636364  42.5454545",
        "  42.3636364  42.0000000  41.5454545  41.1818182\n [481]  40.7272727  40.0909091  39.1818182  38.0000000  36.8181818  35.6363636  34.4545455  33.5454545\n [489]  32.6363636  31.6363636  30.3636364  29.1818182  28.1818182  27.0000000  25.8181818  24.7272727\n [497]  23.6363636  22.4545455  21.1818182  20.0909091  19.1818182  18.4545455  17.7272727  16.9090909\n [505]  16.6363636  17.4545455  18.3636364  19.0909091  20.2727273  21.9090909  23.3636364  25.0000000\n [513]  26.8181818  28.6363636  30.5454545  32.5454545",
        "  34.2727273  36.0909091  38.3636364  40.8181818\n [521]  42.9090909  45.3636364  47.7272727  50.3636364  53.5454545  57.0909091  61.0909091  65.2727273\n [529]  69.2727273  73.2727273  77.5454545  82.1818182  86.9090909  91.4545455  95.6363636  99.4545455\n [537] 102.8181818 105.4545455 107.6363636 109.7272727 111.3636364 112.3636364 112.6363636 112.5454545\n [545] 112.5454545 112.0909091 111.0000000 109.9090909 108.5454545 106.9090909 105.4545455 104.2727273\n [553] 102.8181818 101.5454545 100.1818182  98.7272727",
        "  97.3636364  96.6363636  95.9090909  96.3636364\n [561]  96.4545455  96.2727273  95.7272727  94.7272727  93.2727273  91.8181818  90.2727273  88.1818182\n [569]  86.0909091  83.8181818  81.0000000  78.9090909  77.1818182  75.5454545  74.4545455  74.3636364\n [577]  74.2727273  74.3636364  75.2727273  76.3636364  77.5454545  78.4545455  79.4545455  80.2727273\n [585]  81.4545455  82.6363636  83.6363636  84.6363636  85.6363636  86.5454545  87.2727273  88.2727273\n [593]  89.4545455  90.0909091  90.7272727  90.7272727",
        "  89.8181818  88.8181818  87.4545455  85.8181818\n [601]  84.1818182  82.4545455  80.5454545  78.1818182  76.5454545  74.3636364  72.7272727  71.8181818\n [609]  70.5454545  69.2727273  68.2727273  67.6363636  66.5454545  65.7272727  65.1818182  64.2727273\n [617]  63.4545455  62.4545455  61.6363636  61.0000000  60.8181818  60.5454545  60.8181818  62.6363636\n [625]  65.3636364  68.7272727  74.1818182  79.9090909  86.0000000  92.2727273  99.4545455 107.0000000\n [633] 114.6363636 121.8181818 127.8181818 133.3636364",
        " 139.0909091 143.3636364 148.1818182 153.1818182\n [641] 159.5454545 165.3636364 171.3636364 177.0000000 182.2727273 188.7272727 194.8181818 200.4545455\n [649] 205.1818182 209.7272727 214.0000000 216.7272727 219.0909091 221.4545455 224.3636364 227.6363636\n [657] 230.4545455 233.0909091 235.9090909 238.4545455 239.7272727 239.5454545 238.4545455 235.9090909\n [665] 232.7272727 229.2727273 225.2727273 219.9090909 213.8181818 208.0909091 202.4545455 198.4545455\n [673] 195.0000000 192.4545455 191.0000000 189.4545455",
        " 187.6363636 185.6363636 183.7272727 182.3636364\n [681] 180.2727273 178.6363636 175.4545455 173.0000000 170.7272727 168.9090909 167.1818182 165.7272727\n [689] 164.7272727 164.2727273 164.8181818 165.0909091 165.0000000 165.0000000 164.9090909 164.0000000\n [697] 162.9090909 161.9090909 160.9090909 159.8181818 158.0909091 155.4545455 152.2727273 148.9090909\n [705] 146.3636364 143.9090909 141.1818182 138.5454545 135.3636364 132.5454545 128.9090909 125.6363636\n [713] 122.0909091 119.0000000 115.2727273 112.2727273",
        " 108.5454545 105.5454545 102.5454545 100.4545455\n [721]  97.7272727  95.2727273  93.0000000  90.5454545  87.9090909  86.1818182  83.6363636  79.9090909\n [729]  76.1818182  72.7272727  68.9090909  65.2727273  62.2727273  59.1818182  56.0909091  53.8181818\n [737]  51.9090909  50.2727273  50.0909091  50.0909091  50.0000000  49.7272727  49.4545455  49.2727273\n [745]  49.2727273  49.4545455  49.0000000  48.4545455  47.8181818  47.3636364  47.3636364  47.3636364\n [753]  46.8181818  46.4545455  46.0909091  45.6363636",
        "  44.7272727  43.9090909  42.9090909  41.9090909\n [761]  41.1818182  39.9090909  38.5454545  37.8181818  37.0909091  36.2727273  35.2727273  34.8181818\n [769]  34.3636364  33.9090909  33.5454545  33.0909091  32.4545455  31.7272727  31.0000000  30.2727273\n [777]  29.5454545  29.5454545  29.6363636  29.8181818  29.9090909  29.9090909  29.9090909  30.0909091\n [785]  30.2727273  30.4545455  30.9090909  30.9090909  30.3636364  29.6363636  28.9090909  28.1818182\n [793]  27.3636364  26.5454545  25.8181818  25.1818182",
        "  24.5454545  23.5454545  22.9090909  22.3636364\n [801]  21.9090909  21.4545455  21.0909091  20.8181818  20.5454545  20.2727273  19.9090909  19.4545455\n [809]  19.0909091  18.5454545  17.9090909  17.2727273  16.6363636  16.0000000  14.8181818  13.7272727\n [817]  12.6363636  11.6363636  10.8181818  10.0000000   9.2727273   8.6363636   8.1818182   7.4545455\n [825]   6.7272727   6.4545455   6.2727273   6.0909091   6.0000000   5.8181818   5.6363636   5.5454545\n [833]   5.4545455   5.2727273   5.3636364   5.5454545",
        "   5.8181818   5.9090909   6.0909091   6.1818182\n [841]   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818   6.9090909\n [849]   7.0909091   7.1818182   7.2727273   7.3636364   7.3636364   7.3636364   7.3636364   7.2727273\n [857]   7.1818182   7.0909091   7.0909091   6.9090909   6.7272727   6.5454545   6.3636364   6.0909091\n [865]   5.8181818   5.4545455   5.1818182   4.9090909   4.6363636   4.2727273   4.0000000   3.7272727\n [873]   3.4545455   3.1818182   3.0909091   2.9090909",
        "   2.8181818   2.7272727   2.6363636   2.5454545\n [881]   2.4545455   2.3636364   2.2727273   2.1818182   2.0909091   1.9090909   1.8181818   1.7272727\n [889]   1.6363636   1.5454545   1.4545455   1.3636364   1.2727273   1.1818182   1.0909091   0.9090909\n [897]   0.8181818   0.8181818   0.8181818   0.8181818   0.8181818   0.9090909   1.0000000   1.0909091\n [905]   1.1818182   1.4545455   1.9090909   2.3636364   2.7272727   3.1818182   3.6363636   4.0909091\n [913]   4.4545455   4.8181818   5.1818182   5.5454545",
        "   5.7272727   5.8181818   5.9090909   6.0909091\n [921]   6.1818182   6.2727273   6.3636364   6.4545455   6.5454545   6.6363636   6.7272727   6.8181818\n [929]   6.9090909   7.0000000   7.0000000   7.0000000   7.0000000   7.0000000   6.9090909   6.8181818\n [937]   6.7272727   6.6363636   6.4545455   6.2727273   6.0909091   5.9090909   5.5454545   5.0909091\n [945]   4.7272727   4.4545455   4.1818182   4.0000000   3.8181818   3.7272727   3.6363636   3.7272727\n [953]   4.0909091   5.0909091   6.1818182   7.6363636",
        "   9.2727273  11.0000000  12.6363636  14.2727273\n [961]  15.9090909  17.5454545  19.0000000  20.1818182  20.9090909  21.6363636  21.9090909  22.0000000\n [969]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000\n [977]  22.0000000  22.0000000  22.0000000  22.0000000  22.0000000  21.9090909  21.8181818  21.6363636\n [985]  21.3636364  21.0909091  20.8181818  20.5454545  20.0909091  19.3636364  18.1818182  17.0000000\n [993]  15.4545455  13.6363636  11.8181818  10.0909091",
        "   8.3636364   6.6363636   4.9090909   3.3636364\n",
        "> ",
        "compute_mappings <- function(mappings, strand) ",
        "+ ",
        "{",
        "+ ",
        "  for(i in 1:nrow(mappings)) ",
        "+ ",
        "  {",
        "+ ",
        "    init <- mappings$init[i]",
        "+ ",
        "    end <- mappings$end[i]",
        "+ ",
        "    #increase every position from init to end by 1",
        "+ ",
        "    strand[init:end] <- strand[init:end] + 1",
        "+ ",
        "  }",
        "+ ",
        "  return(strand)",
        "+ ",
        "}",
        "> ",
        "# smooths the signal",
        "> ",
        "# b)",
        "> ",
        "smooth_strands <-function(data, k)",
        "+ ",
        "{",
        "+ ",
        "  filter_size <- (2*k) + 1",
        "+ ",
        "  padding <- rep(0, k)",
        "+ ",
        "  data <- c(padding, data, padding)",
        "+ ",
        "  filtered <-filter(data, rep(1/filter_size, filter_size))",
        "+ ",
        "  return (na.omit(filtered))",
        "+ ",
        "}",
        "> ",
        "library(readr)",
        "> ",
        "mappings <- read_delim(\"mappings.txt\", \" \", escape_double = FALSE, ",
        "+ ",
        "                       col_names = c(\"init\", \"end\", \"direction\"), trim_ws = TRUE)",
        "Parsed with column specification:\ncols(\n  init = col_integer(),\n  end = col_integer(),\n  direction = col_character()\n)\n",
        "> ",
        "",
        "> ",
        "# adapt it to R standards",
        "> ",
        "mappings <- mappings + 1",
        "Error in FUN(left, right) : non-numeric argument to binary operator\n",
        "> ",
        "View(mappings)",
        "> ",
        "forward_mappings <- mappings[mappings$direction == \"+\",]",
        "> ",
        "reverse_mappings <- mappings[mappings$direction == \"-\",] ",
        "> ",
        "",
        "> ",
        "base_pairs <- 1000",
        "> ",
        "# strands",
        "> ",
        "strands <- data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "",
        "> ",
        "# compute mappings",
        "> ",
        "strands$forward <- compute_mappigns(forward_mappings, strands$forward)",
        "Error in compute_mappigns(forward_mappings, strands$forward) : \n  could not find function \"compute_mappigns\"\n",
        "> ",
        "strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)",
        "> ",
        "",
        "> ",
        "smooth_frame$reverse <- smooth_strands(strands$forward, 5)",
        "> ",
        "",
        "> ",
        "smooth_frame <-data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "smooth_frame$reverse <- smooth_strands(strands$forward, 5)",
        "> ",
        "strands <- data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "strands$forward <- compute_mappigns(forward_mappings, strands$forward)",
        "Error in compute_mappigns(forward_mappings, strands$forward) : \n  could not find function \"compute_mappigns\"\n",
        "> ",
        "strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)",
        "> ",
        "library(readr)",
        "> ",
        "mappings <- read_delim(\"mappings.txt\", \" \", escape_double = FALSE, ",
        "+ ",
        "                       col_names = c(\"init\", \"end\", \"direction\"), trim_ws = TRUE)",
        "Parsed with column specification:\ncols(\n  init = col_integer(),\n  end = col_integer(),\n  direction = col_character()\n)\n",
        "> ",
        "mappings$init <- mappings$init + 1",
        "> ",
        "mappings$end <- mappings$end + 1",
        "> ",
        "View(mappings)",
        "> ",
        "forward_mappings <- mappings[mappings$direction == \"+\",]",
        "> ",
        "reverse_mappings <- mappings[mappings$direction == \"-\",]",
        "> ",
        "base_pairs <- 1000",
        "> ",
        "strands <- data.frame(\"forward\"= rep(0, base_pairs), \"reverse\"=rep(0, base_pairs))",
        "> ",
        "strands$forward <- compute_mappigns(forward_mappings, strands$forward)",
        "Error in compute_mappigns(forward_mappings, strands$forward) : \n  could not find function \"compute_mappigns\"\n",
        "> ",
        "strands$reverse <- compute_mappings(reverse_mappings, strands$reverse)",
        "> ",
        "strands$forward <- compute_mappigns(forward_mappings, strands$forward)",
        "Error in compute_mappigns(forward_mappings, strands$forward) : \n  could not find function \"compute_mappigns\"\n",
        "> ",
        "strands$forward <- compute_mappings(forward_mappings, strands$forward)",
        "> ",
        "smooth_frame$reverse <- smooth_strands(strands$forward, 5)",
        "> ",
        "k <- 5",
        "> ",
        "for(i in 1:nrow(strands))",
        "+ ",
        "{",
        "+ ",
        "  init <- i - k",
        "+ ",
        "  end <- i + k",
        "+ ",
        "  ",
        "+ ",
        "  if(init < 1){",
        "+ ",
        "    init <- 1",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  if(end > 1000)",
        "+ ",
        "  {",
        "+ ",
        "    end <- 1000",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  #print(strands$forward[init:end])",
        "+ ",
        "  smooth_frame$forward[i] <- sum(strands$forward[init:end]) / (2 * k) + 1",
        "+ ",
        "}"
    ],
    "type" : [
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1
    ]
}